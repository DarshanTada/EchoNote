<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/echonote/MOMNoteModel.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/echonote/MOMNoteModel.java" />
              <option name="updatedContent" value="package com.example.echonote;&#10;&#10;import java.util.List;&#10;&#10;public class MOMNoteModel {&#10;    private String autogeneratedId;&#10;    private String title;&#10;    private String momdetails;&#10;    private List&lt;String&gt; tags;&#10;    private long time;&#10;&#10;    public MOMNoteModel(String autogeneratedId, String title, String momdetails, List&lt;String&gt; tags, long time) {&#10;        this.autogeneratedId = autogeneratedId;&#10;        this.title = title;&#10;        this.momdetails = momdetails;&#10;        this.tags = tags;&#10;        this.time = time;&#10;    }&#10;&#10;    public String getAutogeneratedId() {&#10;        return autogeneratedId;&#10;    }&#10;&#10;    public String getTitle() {&#10;        return title;&#10;    }&#10;&#10;    public String getMomdetails() {&#10;        return momdetails;&#10;    }&#10;&#10;    public List&lt;String&gt; getTags() {&#10;        return tags;&#10;    }&#10;&#10;    public long getTime() {&#10;        return time;&#10;    }&#10;&#10;    // You can add setters if needed&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/EditSummaryActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/EditSummaryActivity.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.app.AlertDialog;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.util.Log;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Toast;&#10;&#10;import com.example.mobile.databinding.ActivityEditSummaryBinding;&#10;import com.example.shared.MOMNoteModel;&#10;import com.example.shared.SharedPrefUtils;&#10;import com.google.android.gms.tasks.Tasks;&#10;import com.google.android.gms.wearable.MessageClient;&#10;import com.google.android.gms.wearable.Wearable;&#10;import com.google.android.gms.wearable.Node;&#10;import com.google.gson.Gson;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.io.IOException;&#10;import java.util.ArrayList;&#10;&#10;import okhttp3.Call;&#10;import okhttp3.Callback;&#10;import okhttp3.MediaType;&#10;import okhttp3.OkHttpClient;&#10;import okhttp3.Request;&#10;import okhttp3.RequestBody;&#10;import okhttp3.Response;&#10;&#10;public class EditSummaryActivity extends Activity {&#10;    private ActivityEditSummaryBinding binding;&#10;    private ArrayAdapter&lt;String&gt; tagAdapter;&#10;    private ArrayList&lt;String&gt; tagList = new ArrayList&lt;&gt;();&#10;    private String minutes;&#10;&#10;    private static final String TAG = &quot;EditSummaryActivity&quot;;&#10;    private static final String PREF_TAGS = &quot;mom_tags&quot;;&#10;    private static final String PREF_TAGS_KEY = &quot;tags_list&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        binding = ActivityEditSummaryBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Load tags from SharedPreferences&#10;        tagList.clear();&#10;        tagList.addAll(SharedPrefUtils.getAllTags(this));&#10;        if (tagList.isEmpty()) {&#10;            tagList.add(&quot;General&quot;);&#10;            tagList.add(&quot;Project&quot;);&#10;            tagList.add(&quot;Meeting&quot;);&#10;            for (String defaultTag : tagList) {&#10;                SharedPrefUtils.saveTag(this, defaultTag);&#10;            }&#10;        }&#10;        tagAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, tagList);&#10;        tagAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        binding.spinnerTags.setAdapter(tagAdapter);&#10;        Intent intent = getIntent();&#10;        String title = intent.getStringExtra(&quot;title&quot;);&#10;        minutes = intent.getStringExtra(&quot;minutes&quot;);&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;&#10;&#10;        binding.etTitle.setText(title);&#10;        binding.tvMinutes.setText(&quot;Generating...&quot;);&#10;&#10;        if (tag != null &amp;&amp; tagList.contains(tag)) {&#10;            binding.spinnerTags.setSelection(tagList.indexOf(tag));&#10;        }&#10;&#10;        binding.btnAddTag.setOnClickListener(v -&gt; showAddTagDialog());&#10;&#10;        generateMinutesFromGemini(minutes);&#10;&#10;        binding.btnSave.setOnClickListener(v -&gt; {&#10;            String selectedTag = binding.spinnerTags.getSelectedItem().toString();&#10;            String noteTitle = binding.etTitle.getText().toString();&#10;            String generatedMinutes = binding.tvMinutes.getText().toString();&#10;            long currentTime = System.currentTimeMillis();&#10;            java.util.List&lt;String&gt; tags = new ArrayList&lt;&gt;();&#10;            tags.add(selectedTag);&#10;            String autogeneratedId = noteTitle + &quot;_&quot; + currentTime;&#10;&#10;            MOMNoteModel noteModel = new MOMNoteModel(autogeneratedId, noteTitle, generatedMinutes, tags, currentTime);&#10;            SharedPrefUtils.saveNote(this, noteModel);&#10;&#10;            // Send MOMNoteModel to watch&#10;            new Thread(() -&gt; {&#10;                try {&#10;                    Gson gson = new Gson();&#10;                    String momJson = gson.toJson(noteModel);&#10;                    MessageClient messageClient = Wearable.getMessageClient(this);&#10;                    for (Node node : Tasks.await(Wearable.getNodeClient(this).getConnectedNodes())) {&#10;                        messageClient.sendMessage(node.getId(), &quot;/mom_note_model&quot;, momJson.getBytes());&#10;                    }&#10;                } catch (Exception e) {&#10;                    Log.e(TAG, &quot;Error sending MOMNoteModel to watch&quot;, e);&#10;                }&#10;            }).start();&#10;&#10;            Toast.makeText(this, &quot;Note saved!&quot;, Toast.LENGTH_SHORT).show();&#10;//            // For testing: get data from SharedPreferences and log it&#10;//            for (MOMNoteModel model : SharedPrefUtils.getAllNotes(this)) {&#10;//                Log.d(TAG, &quot;Note: &quot; + model.getTitle() + &quot;, Tags: &quot; + model.getTags() + &quot;, Details: &quot; + model.getMomdetails());&#10;//            }&#10;&#10;            Intent listIntent = new Intent(EditSummaryActivity.this, MOMListActivity.class);&#10;            listIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);&#10;            startActivity(listIntent);&#10;            finish();&#10;        });&#10;&#10;        binding.tvMinutes.setFocusable(true);&#10;        binding.tvMinutes.setFocusableInTouchMode(true);&#10;        binding.tvMinutes.setCursorVisible(true);&#10;        binding.tvMinutes.setOnClickListener(v -&gt; binding.tvMinutes.requestFocus());&#10;        // Optionally, set inputType for multiline text&#10;        binding.tvMinutes.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_FLAG_MULTI_LINE);&#10;    }&#10;&#10;    private void showAddTagDialog() {&#10;        AlertDialog.Builder builder = new AlertDialog.Builder(this);&#10;        builder.setTitle(&quot;Add New Tag&quot;);&#10;        final android.widget.EditText input = new android.widget.EditText(this);&#10;        builder.setView(input);&#10;        builder.setPositiveButton(&quot;Add&quot;, (dialog, which) -&gt; {&#10;            String newTag = input.getText().toString().trim();&#10;            if (!newTag.isEmpty()) {&#10;                // Save tag using SharedPrefUtils&#10;                SharedPrefUtils.saveTag(this, newTag);&#10;                tagList.clear();&#10;                tagList.addAll(SharedPrefUtils.getAllTags(this));&#10;                tagAdapter.notifyDataSetChanged();&#10;                binding.spinnerTags.setSelection(tagList.size() - 1);&#10;            }&#10;        });&#10;        builder.setNegativeButton(&quot;Cancel&quot;, (dialog, which) -&gt; dialog.cancel());&#10;        builder.show();&#10;    }&#10;&#10;    private void generateMinutesFromGemini(String inputText) {&#10;        String apiUrl = &quot;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyAHmf5T-CuTrlGdzXP4g7qKtnJzL68X7E4&quot;;&#10;        OkHttpClient client = new OkHttpClient();&#10;        JSONObject json = new JSONObject();&#10;&#10;        try {&#10;            JSONArray contents = new JSONArray();&#10;            JSONObject contentObj = new JSONObject();&#10;            JSONArray parts = new JSONArray();&#10;            JSONObject partObj = new JSONObject();&#10;&#10;            String prompt = &quot;You are an assistant that generates professional Minutes of Meeting from any raw transcript. &quot;&#10;                    + &quot;Summarize the main points clearly in bullet points. &quot;&#10;                    + &quot;If specific meeting details like title, date, attendees, or agenda are missing, just summarize the information given. &quot;&#10;                    + &quot;Output only the bullet points, no extra explanation.\n\n&quot;&#10;                    + &quot;Transcript:\n&quot; + inputText;&#10;&#10;            partObj.put(&quot;text&quot;, prompt);&#10;            parts.put(partObj);&#10;            contentObj.put(&quot;parts&quot;, parts);&#10;            contents.put(contentObj);&#10;            json.put(&quot;contents&quot;, contents);&#10;        } catch (Exception e) {&#10;            runOnUiThread(() -&gt; binding.tvMinutes.setText(&quot;Error preparing request&quot;));&#10;            return;&#10;        }&#10;&#10;        RequestBody body = RequestBody.create(json.toString(), MediaType.get(&quot;application/json&quot;));&#10;        Request request = new Request.Builder().url(apiUrl).post(body).build();&#10;&#10;        client.newCall(request).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(Call call, IOException e) {&#10;                new Handler(Looper.getMainLooper()).post(() -&gt; binding.tvMinutes.setText(&quot;Error generating minutes: &quot; + e.getMessage()));&#10;            }&#10;&#10;            @Override&#10;            public void onResponse(Call call, Response response) throws IOException {&#10;                String result = response.body().string();&#10;&#10;                Log.d(TAG, &quot;Full Gemini response: &quot; + result);&#10;&#10;                String points = &quot;No minutes generated&quot;;&#10;&#10;                try {&#10;                    JSONObject obj = new JSONObject(result);&#10;                    if (obj.has(&quot;candidates&quot;)) {&#10;                        JSONArray candidates = obj.getJSONArray(&quot;candidates&quot;);&#10;                        if (candidates.length() &gt; 0) {&#10;                            JSONObject firstCandidate = candidates.getJSONObject(0);&#10;                            if (firstCandidate.has(&quot;content&quot;)) {&#10;                                JSONObject content = firstCandidate.getJSONObject(&quot;content&quot;);&#10;                                if (content.has(&quot;parts&quot;)) {&#10;                                    JSONArray parts = content.getJSONArray(&quot;parts&quot;);&#10;                                    if (parts.length() &gt; 0) {&#10;                                        JSONObject firstPart = parts.getJSONObject(0);&#10;                                        points = firstPart.optString(&quot;text&quot;, &quot;No minutes generated&quot;);&#10;                                    }&#10;                                }&#10;                            }&#10;                        }&#10;                    } else if (obj.has(&quot;error&quot;)) {&#10;                        points = &quot;API Error: &quot; + obj.getJSONObject(&quot;error&quot;).optString(&quot;message&quot;, &quot;Unknown error&quot;);&#10;                    }&#10;                } catch (Exception e) {&#10;                    points = &quot;Error parsing response: &quot; + e.getMessage();&#10;                    Log.e(TAG, &quot;JSON parsing error&quot;, e);&#10;                }&#10;&#10;                final String finalPoints = points;&#10;                new Handler(Looper.getMainLooper()).post(() -&gt; binding.tvMinutes.setText(finalPoints));&#10;            }&#10;        });&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.app.AlertDialog;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.util.Log;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Toast;&#10;&#10;import com.example.mobile.databinding.ActivityEditSummaryBinding;&#10;import com.example.shared.MOMNoteModel;&#10;import com.example.shared.SharedPrefUtils;&#10;import com.google.android.gms.tasks.Tasks;&#10;import com.google.android.gms.wearable.MessageClient;&#10;import com.google.android.gms.wearable.Wearable;&#10;import com.google.android.gms.wearable.Node;&#10;import com.google.gson.Gson;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.io.IOException;&#10;import java.util.ArrayList;&#10;&#10;import okhttp3.Call;&#10;import okhttp3.Callback;&#10;import okhttp3.MediaType;&#10;import okhttp3.OkHttpClient;&#10;import okhttp3.Request;&#10;import okhttp3.RequestBody;&#10;import okhttp3.Response;&#10;&#10;public class EditSummaryActivity extends Activity {&#10;    private ActivityEditSummaryBinding binding;&#10;    private ArrayAdapter&lt;String&gt; tagAdapter;&#10;    private ArrayList&lt;String&gt; tagList = new ArrayList&lt;&gt;();&#10;    private String minutes;&#10;&#10;    private static final String TAG = &quot;EditSummaryActivity&quot;;&#10;    private static final String PREF_TAGS = &quot;mom_tags&quot;;&#10;    private static final String PREF_TAGS_KEY = &quot;tags_list&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        binding = ActivityEditSummaryBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Load tags from SharedPreferences&#10;        tagList.clear();&#10;        tagList.addAll(SharedPrefUtils.getAllTags(this));&#10;        if (tagList.isEmpty()) {&#10;            tagList.add(&quot;General&quot;);&#10;            tagList.add(&quot;Project&quot;);&#10;            tagList.add(&quot;Meeting&quot;);&#10;            for (String defaultTag : tagList) {&#10;                SharedPrefUtils.saveTag(this, defaultTag);&#10;            }&#10;        }&#10;        tagAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, tagList);&#10;        tagAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        binding.spinnerTags.setAdapter(tagAdapter);&#10;        Intent intent = getIntent();&#10;        String title = intent.getStringExtra(&quot;title&quot;);&#10;        minutes = intent.getStringExtra(&quot;minutes&quot;);&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;&#10;&#10;        binding.etTitle.setText(title);&#10;        binding.tvMinutes.setText(&quot;Generating...&quot;);&#10;&#10;        if (tag != null &amp;&amp; tagList.contains(tag)) {&#10;            binding.spinnerTags.setSelection(tagList.indexOf(tag));&#10;        }&#10;&#10;        binding.btnAddTag.setOnClickListener(v -&gt; showAddTagDialog());&#10;&#10;        generateMinutesFromGemini(minutes);&#10;&#10;        binding.btnSave.setOnClickListener(v -&gt; {&#10;            String selectedTag = binding.spinnerTags.getSelectedItem().toString();&#10;            String noteTitle = binding.etTitle.getText().toString();&#10;            String generatedMinutes = binding.tvMinutes.getText().toString();&#10;            long currentTime = System.currentTimeMillis();&#10;            java.util.List&lt;String&gt; tags = new ArrayList&lt;&gt;();&#10;            tags.add(selectedTag);&#10;            String autogeneratedId = noteTitle + &quot;_&quot; + currentTime;&#10;&#10;            MOMNoteModel noteModel = new MOMNoteModel(autogeneratedId, noteTitle, generatedMinutes, tags, currentTime);&#10;            SharedPrefUtils.saveNote(this, noteModel);&#10;&#10;            // Send MOMNoteModel to watch&#10;            new Thread(() -&gt; {&#10;                try {&#10;                    Gson gson = new Gson();&#10;                    String momJson = gson.toJson(noteModel);&#10;                    MessageClient messageClient = Wearable.getMessageClient(this);&#10;                    for (Node node : Tasks.await(Wearable.getNodeClient(this).getConnectedNodes())) {&#10;                        messageClient.sendMessage(node.getId(), &quot;/mom_note_model&quot;, momJson.getBytes());&#10;                    }&#10;                } catch (Exception e) {&#10;                    Log.e(TAG, &quot;Error sending MOMNoteModel to watch&quot;, e);&#10;                }&#10;            }).start();&#10;&#10;            Toast.makeText(this, &quot;Note saved!&quot;, Toast.LENGTH_SHORT).show();&#10;            // Do not redirect after sending data&#10;        });&#10;&#10;        binding.tvMinutes.setFocusable(true);&#10;        binding.tvMinutes.setFocusableInTouchMode(true);&#10;        binding.tvMinutes.setCursorVisible(true);&#10;        binding.tvMinutes.setOnClickListener(v -&gt; binding.tvMinutes.requestFocus());&#10;        // Optionally, set inputType for multiline text&#10;        binding.tvMinutes.setInputType(android.text.InputType.TYPE_CLASS_TEXT | android.text.InputType.TYPE_TEXT_FLAG_MULTI_LINE);&#10;    }&#10;&#10;    private void showAddTagDialog() {&#10;        AlertDialog.Builder builder = new AlertDialog.Builder(this);&#10;        builder.setTitle(&quot;Add New Tag&quot;);&#10;        final android.widget.EditText input = new android.widget.EditText(this);&#10;        builder.setView(input);&#10;        builder.setPositiveButton(&quot;Add&quot;, (dialog, which) -&gt; {&#10;            String newTag = input.getText().toString().trim();&#10;            if (!newTag.isEmpty()) {&#10;                // Save tag using SharedPrefUtils&#10;                SharedPrefUtils.saveTag(this, newTag);&#10;                tagList.clear();&#10;                tagList.addAll(SharedPrefUtils.getAllTags(this));&#10;                tagAdapter.notifyDataSetChanged();&#10;                binding.spinnerTags.setSelection(tagList.size() - 1);&#10;            }&#10;        });&#10;        builder.setNegativeButton(&quot;Cancel&quot;, (dialog, which) -&gt; dialog.cancel());&#10;        builder.show();&#10;    }&#10;&#10;    private void generateMinutesFromGemini(String inputText) {&#10;        String apiUrl = &quot;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyAHmf5T-CuTrlGdzXP4g7qKtnJzL68X7E4&quot;;&#10;        OkHttpClient client = new OkHttpClient();&#10;        JSONObject json = new JSONObject();&#10;&#10;        try {&#10;            JSONArray contents = new JSONArray();&#10;            JSONObject contentObj = new JSONObject();&#10;            JSONArray parts = new JSONArray();&#10;            JSONObject partObj = new JSONObject();&#10;&#10;            String prompt = &quot;You are an assistant that generates professional Minutes of Meeting from any raw transcript. &quot;&#10;                    + &quot;Summarize the main points clearly in bullet points. &quot;&#10;                    + &quot;If specific meeting details like title, date, attendees, or agenda are missing, just summarize the information given. &quot;&#10;                    + &quot;Output only the bullet points, no extra explanation.\n\n&quot;&#10;                    + &quot;Transcript:\n&quot; + inputText;&#10;&#10;            partObj.put(&quot;text&quot;, prompt);&#10;            parts.put(partObj);&#10;            contentObj.put(&quot;parts&quot;, parts);&#10;            contents.put(contentObj);&#10;            json.put(&quot;contents&quot;, contents);&#10;        } catch (Exception e) {&#10;            runOnUiThread(() -&gt; binding.tvMinutes.setText(&quot;Error preparing request&quot;));&#10;            return;&#10;        }&#10;&#10;        RequestBody body = RequestBody.create(json.toString(), MediaType.get(&quot;application/json&quot;));&#10;        Request request = new Request.Builder().url(apiUrl).post(body).build();&#10;&#10;        client.newCall(request).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(Call call, IOException e) {&#10;                new Handler(Looper.getMainLooper()).post(() -&gt; binding.tvMinutes.setText(&quot;Error generating minutes: &quot; + e.getMessage()));&#10;            }&#10;&#10;            @Override&#10;            public void onResponse(Call call, Response response) throws IOException {&#10;                String result = response.body().string();&#10;&#10;                Log.d(TAG, &quot;Full Gemini response: &quot; + result);&#10;&#10;                String points = &quot;No minutes generated&quot;;&#10;&#10;                try {&#10;                    JSONObject obj = new JSONObject(result);&#10;                    if (obj.has(&quot;candidates&quot;)) {&#10;                        JSONArray candidates = obj.getJSONArray(&quot;candidates&quot;);&#10;                        if (candidates.length() &gt; 0) {&#10;                            JSONObject firstCandidate = candidates.getJSONObject(0);&#10;                            if (firstCandidate.has(&quot;content&quot;)) {&#10;                                JSONObject content = firstCandidate.getJSONObject(&quot;content&quot;);&#10;                                if (content.has(&quot;parts&quot;)) {&#10;                                    JSONArray parts = content.getJSONArray(&quot;parts&quot;);&#10;                                    if (parts.length() &gt; 0) {&#10;                                        JSONObject firstPart = parts.getJSONObject(0);&#10;                                        points = firstPart.optString(&quot;text&quot;, &quot;No minutes generated&quot;);&#10;                                    }&#10;                                }&#10;                            }&#10;                        }&#10;                    } else if (obj.has(&quot;error&quot;)) {&#10;                        points = &quot;API Error: &quot; + obj.getJSONObject(&quot;error&quot;).optString(&quot;message&quot;, &quot;Unknown error&quot;);&#10;                    }&#10;                } catch (Exception e) {&#10;                    points = &quot;Error parsing response: &quot; + e.getMessage();&#10;                    Log.e(TAG, &quot;JSON parsing error&quot;, e);&#10;                }&#10;&#10;                final String finalPoints = points;&#10;                new Handler(Looper.getMainLooper()).post(() -&gt; binding.tvMinutes.setText(finalPoints));&#10;            }&#10;        });&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMNewList/MOMAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMNewList/MOMAdapter.java" />
              <option name="originalContent" value="// app/src/main/java/com/example/mobile/MOMAdapter.java&#10;package com.example.mobile.MOMNewList;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.TextView;&#10;&#10;import com.example.mobile.MOMNote;&#10;import com.example.mobile.R;&#10;&#10;import java.util.List;&#10;&#10;public class MOMAdapter extends ArrayAdapter&lt;MOMNote&gt; {&#10;    public MOMAdapter(Context context, List&lt;MOMNote&gt; notes) {&#10;        super(context, 0, notes);&#10;    }&#10;&#10;    @Override&#10;    public View getView(int position, View convertView, ViewGroup parent) {&#10;        MOMNote note = getItem(position);&#10;        if (convertView == null) {&#10;            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_mom, parent, false);&#10;        }&#10;        TextView minutesView = convertView.findViewById(R.id.mom_minutes);&#10;        minutesView.setText(note.getMinutes());&#10;&#10;        // hide other fields if they exist in layout&#10;        View[] maybe = new View[]{&#10;                convertView.findViewById(R.id.mom_title),&#10;                convertView.findViewById(R.id.mom_summary),&#10;                convertView.findViewById(R.id.mom_date),&#10;                convertView.findViewById(R.id.mom_tag),&#10;                convertView.findViewById(R.id.mom_read_status),&#10;                convertView.findViewById(R.id.mom_loader),&#10;                convertView.findViewById(R.id.mom_pending_message)&#10;        };&#10;        for (View v : maybe) if (v != null) v.setVisibility(View.GONE);&#10;        return convertView;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="// app/src/main/java/com/example/mobile/MOMAdapter.java&#10;package com.example.mobile.MOMNewList;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ArrayAdapter;&#10;&#10;import com.example.mobile.MOMNote;&#10;import com.example.mobile.R;&#10;&#10;import java.util.List;&#10;&#10;public class MOMAdapter extends ArrayAdapter&lt;MOMNote&gt; {&#10;    public MOMAdapter(Context context, List&lt;MOMNote&gt; notes) {&#10;        super(context, 0, notes);&#10;    }&#10;&#10;    @Override&#10;    public View getView(int position, View convertView, ViewGroup parent) {&#10;        MOMNote note = getItem(position);&#10;        if (convertView == null) {&#10;            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_mom, parent, false);&#10;        }&#10;        // Use view binding&#10;        com.example.mobile.databinding.ItemMomBinding binding = com.example.mobile.databinding.ItemMomBinding.bind(convertView);&#10;        binding.momMinutes.setText(note.getMinutes());&#10;        // Hide other fields if they exist in layout&#10;        View[] maybe = new View[]{&#10;                binding.getRoot().findViewById(R.id.mom_title),&#10;                binding.getRoot().findViewById(R.id.mom_summary),&#10;                binding.getRoot().findViewById(R.id.mom_date),&#10;                binding.getRoot().findViewById(R.id.mom_tag),&#10;                binding.getRoot().findViewById(R.id.mom_read_status),&#10;                binding.getRoot().findViewById(R.id.mom_loader),&#10;                binding.getRoot().findViewById(R.id.mom_pending_message)&#10;        };&#10;        for (View v : maybe) if (v != null) v.setVisibility(View.GONE);&#10;        return binding.getRoot();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMNewList/TagNotesListActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMNewList/TagNotesListActivity.java" />
              <option name="originalContent" value="package com.example.mobile.MOMNewList;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.ListView;&#10;import android.widget.Toast;&#10;&#10;import com.example.mobile.R;&#10;import com.example.shared.MOMNoteModel;&#10;import com.example.shared.SharedPrefUtils;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class TagNotesListActivity extends Activity {&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_mom_list);&#10;&#10;        ListView momListView = findViewById(R.id.mom_list_view);&#10;        Intent intent = getIntent();&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;        if (tag == null) {&#10;            Toast.makeText(this, &quot;No tag selected&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;        setTitle(tag + &quot; Notes&quot;);&#10;        List&lt;MOMNoteModel&gt; allNotes = SharedPrefUtils.getAllNotes(this);&#10;        List&lt;MOMNoteModel&gt; filteredNotes = new ArrayList&lt;&gt;();&#10;        for (MOMNoteModel note : allNotes) {&#10;            if (note.getTags() != null &amp;&amp; note.getTags().contains(tag)) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_list_item_1, new ArrayList&lt;String&gt;()) {&#10;            @Override&#10;            public String getItem(int position) {&#10;                return filteredNotes.get(position).getTitle();&#10;            }&#10;        };&#10;        for (MOMNoteModel note : filteredNotes) {&#10;            adapter.add(note.getTitle());&#10;        }&#10;        momListView.setAdapter(adapter);&#10;        momListView.setOnItemClickListener((parent, view, position, id) -&gt; {&#10;            MOMNoteModel note = filteredNotes.get(position);&#10;            Intent detailIntent = new Intent(this, com.example.mobile.MOMDetailActivity.class);&#10;            detailIntent.putExtra(&quot;note_id&quot;, note.getId());&#10;            startActivity(detailIntent);&#10;        });&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile.MOMNewList;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.ListView;&#10;import android.widget.Toast;&#10;&#10;import com.example.mobile.R;&#10;import com.example.shared.MOMNoteModel;&#10;import com.example.shared.SharedPrefUtils;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class TagNotesListActivity extends Activity {&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_mom_list);&#10;&#10;        ListView momListView = findViewById(R.id.mom_list_view);&#10;        Intent intent = getIntent();&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;        if (tag == null) {&#10;            Toast.makeText(this, &quot;No tag selected&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;            return;&#10;        }&#10;        setTitle(tag + &quot; Notes&quot;);&#10;        List&lt;MOMNoteModel&gt; allNotes = SharedPrefUtils.getAllNotes(this);&#10;        List&lt;MOMNoteModel&gt; filteredNotes = new ArrayList&lt;&gt;();&#10;        for (MOMNoteModel note : allNotes) {&#10;            if (note.getTags() != null &amp;&amp; note.getTags().contains(tag)) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        ArrayAdapter&lt;String&gt; adapter = new ArrayAdapter&lt;String&gt;(this, android.R.layout.simple_list_item_1, new ArrayList&lt;String&gt;()) {&#10;            @Override&#10;            public String getItem(int position) {&#10;                return filteredNotes.get(position).getTitle();&#10;            }&#10;        };&#10;        for (MOMNoteModel note : filteredNotes) {&#10;            adapter.add(note.getTitle());&#10;        }&#10;        momListView.setAdapter(adapter);&#10;        momListView.setOnItemClickListener((parent, view, position, id) -&gt; {&#10;            MOMNoteModel note = filteredNotes.get(position);&#10;            Intent detailIntent = new Intent(this, com.example.echonote.MOMDetail.MOMDetailActivity.class);&#10;            detailIntent.putExtra(&quot;note_id&quot;, note.getId());&#10;            startActivity(detailIntent);&#10;        });&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MainActivity/TagListAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MainActivity/TagListAdapter.java" />
              <option name="updatedContent" value="package com.example.mobile.MainActivity;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.BaseAdapter;&#10;&#10;import com.example.mobile.databinding.TagItemBinding;&#10;&#10;import java.util.List;&#10;&#10;public class TagListAdapter extends BaseAdapter {&#10;    private final List&lt;String&gt; tags;&#10;    private final LayoutInflater inflater;&#10;&#10;    public TagListAdapter(Context context, List&lt;String&gt; tags) {&#10;        this.tags = tags;&#10;        this.inflater = LayoutInflater.from(context);&#10;    }&#10;&#10;    @Override&#10;    public int getCount() {&#10;        return tags.size();&#10;    }&#10;&#10;    @Override&#10;    public String getItem(int position) {&#10;        return tags.get(position);&#10;    }&#10;&#10;    @Override&#10;    public long getItemId(int position) {&#10;        return position;&#10;    }&#10;&#10;    @Override&#10;    public View getView(int position, View convertView, ViewGroup parent) {&#10;        TagItemBinding binding;&#10;        if (convertView == null) {&#10;            binding = TagItemBinding.inflate(inflater, parent, false);&#10;            convertView = binding.getRoot();&#10;            convertView.setTag(binding);&#10;        } else {&#10;            binding = (TagItemBinding) convertView.getTag();&#10;        }&#10;        binding.tagName.setText(tags.get(position));&#10;        return convertView;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MainActivity_mobile.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MainActivity_mobile.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.widget.Button;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;&#10;import com.google.android.gms.wearable.MessageClient;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.Wearable;&#10;&#10;public class MainActivity_mobile extends Activity {&#10;&#10;    private static final String TAG = &quot;MainActivity_mobile&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    private Button btnMOMList;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main_mobile);&#10;&#10;        btnMOMList = findViewById(R.id.btn_mom_list);&#10;&#10;        btnMOMList.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(MainActivity_mobile.this, MOMListActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.content.pm.PackageManager;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.widget.Button;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;&#10;import com.google.android.gms.wearable.MessageClient;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.Wearable;&#10;&#10;public class MainActivity_mobile extends Activity {&#10;&#10;    private static final String TAG = &quot;MainActivity_mobile&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    private Button btnMOMList;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main_mobile);&#10;&#10;        // Request notification permission for Android 13+&#10;        if (android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.TIRAMISU) {&#10;            if (checkSelfPermission(android.Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {&#10;                requestPermissions(new String[]{android.Manifest.permission.POST_NOTIFICATIONS}, 1002);&#10;            }&#10;        }&#10;&#10;        btnMOMList = findViewById(R.id.btn_mom_list);&#10;&#10;        btnMOMList.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(MainActivity_mobile.this, MOMListActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/SharedPrefUtils.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/SharedPrefUtils.java" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>