<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/mobile/build.gradle.kts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/build.gradle.kts" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;    alias(libs.plugins.kotlin.compose)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.mobile&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.mobile&quot;&#10;        minSdk = 26&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;    buildFeatures {&#10;        compose = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation(libs.core.ktx)&#10;    implementation(libs.lifecycle.runtime.ktx)&#10;    implementation(libs.activity.compose)&#10;    implementation(platform(libs.compose.bom))&#10;    implementation(libs.ui)&#10;    implementation(libs.ui.graphics)&#10;    implementation(libs.ui.tooling.preview)&#10;    implementation(libs.material3)&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;    implementation(&quot;com.google.android.gms:play-services-wearable:19.0.0&quot;)&#10;    implementation(&quot;org.apache.poi:poi:5.2.3&quot;)&#10;    implementation(&quot;org.apache.poi:poi-ooxml:5.2.3&quot;)&#10;    implementation(project(&quot;:shared&quot;))&#10;    implementation(&quot;com.squareup.okhttp3:okhttp:4.12.0&quot;)&#10;    implementation(&quot;com.google.code.gson:gson:2.10.1&quot;)&#10;    implementation(libs.gms.play.services.wearable)&#10;&#10;&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;    androidTestImplementation(platform(libs.compose.bom))&#10;    androidTestImplementation(libs.ui.test.junit4)&#10;    debugImplementation(libs.ui.tooling)&#10;    debugImplementation(libs.ui.test.manifest)&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;    alias(libs.plugins.kotlin.android)&#10;    alias(libs.plugins.kotlin.compose)&#10;}&#10;&#10;android {&#10;    namespace = &quot;com.example.mobile&quot;&#10;    compileSdk = 36&#10;&#10;    defaultConfig {&#10;        applicationId = &quot;com.example.mobile&quot;&#10;        minSdk = 26&#10;        targetSdk = 36&#10;        versionCode = 1&#10;        versionName = &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner = &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            isMinifyEnabled = false&#10;            proguardFiles(&#10;                getDefaultProguardFile(&quot;proguard-android-optimize.txt&quot;),&#10;                &quot;proguard-rules.pro&quot;&#10;            )&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility = JavaVersion.VERSION_11&#10;        targetCompatibility = JavaVersion.VERSION_11&#10;    }&#10;    kotlinOptions {&#10;        jvmTarget = &quot;11&quot;&#10;    }&#10;    buildFeatures {&#10;        compose = true&#10;        viewBinding = true&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation(libs.core.ktx)&#10;    implementation(libs.lifecycle.runtime.ktx)&#10;    implementation(libs.activity.compose)&#10;    implementation(platform(libs.compose.bom))&#10;    implementation(libs.ui)&#10;    implementation(libs.ui.graphics)&#10;    implementation(libs.ui.tooling.preview)&#10;    implementation(libs.material3)&#10;    implementation(libs.appcompat)&#10;    implementation(libs.material)&#10;    implementation(libs.activity)&#10;    implementation(libs.constraintlayout)&#10;    implementation(&quot;com.google.android.gms:play-services-wearable:19.0.0&quot;)&#10;    implementation(&quot;org.apache.poi:poi:5.2.3&quot;)&#10;    implementation(&quot;org.apache.poi:poi-ooxml:5.2.3&quot;)&#10;    implementation(project(&quot;:shared&quot;))&#10;    implementation(&quot;com.squareup.okhttp3:okhttp:4.12.0&quot;)&#10;    implementation(&quot;com.google.code.gson:gson:2.10.1&quot;)&#10;    implementation(libs.gms.play.services.wearable)&#10;&#10;&#10;    testImplementation(libs.junit)&#10;    androidTestImplementation(libs.ext.junit)&#10;    androidTestImplementation(libs.espresso.core)&#10;    androidTestImplementation(platform(libs.compose.bom))&#10;    androidTestImplementation(libs.ui.test.junit4)&#10;    debugImplementation(libs.ui.tooling)&#10;    debugImplementation(libs.ui.test.manifest)&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    package=&quot;com.example.mobile&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADMIN&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_CONNECT&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot; /&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;com.google.android.wearable.permission.RECEIVE_COMPLICATION_DATA&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;com.google.android.wearable.permission.BIND_LISTENER&quot;/&gt;&#10;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.EchoNote&quot;&gt;&#10;&#10;        &lt;!-- Main launcher activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity_mobile&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- MOM list activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MOMListActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;MOM List&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- MOM detail activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MOMDetailActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;MOM Details&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Edit summary activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.EditSummaryActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;Edit Summary&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;service&#10;            android:name=&quot;.WearMessageListenerService&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;com.google.android.gms.wearable.BIND_LISTENER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/service&gt;&#10;        &lt;!-- Service to receive text from watch --&gt;&#10;        &lt;service&#10;            android:name=&quot;.AudioReceiveService&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:enabled=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;com.google.android.gms.wearable.BIND_LISTENER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/service&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    package=&quot;com.example.mobile&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADMIN&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_CONNECT&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot; /&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;com.google.android.wearable.permission.RECEIVE_COMPLICATION_DATA&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;com.google.android.wearable.permission.BIND_LISTENER&quot;/&gt;&#10;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.EchoNote&quot;&gt;&#10;&#10;        &lt;!-- Main launcher activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity_mobile&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- MOM list activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MOMListActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;MOM List&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- MOM detail activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MOMDetailActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;MOM Details&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Edit summary activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.EditSummaryActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;Edit Summary&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Service to receive text from watch --&gt;&#10;        &lt;service&#10;            android:name=&quot;.AudioReceiveService&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:enabled=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;com.google.android.gms.wearable.BIND_LISTENER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/service&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/AudioReceiveService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/AudioReceiveService.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.NotificationChannel;&#10;import android.app.NotificationManager;&#10;import android.app.PendingIntent;&#10;import android.content.Context;&#10;import android.content.Intent;&#10;import android.os.Build;&#10;import android.util.Log;&#10;&#10;import androidx.core.app.NotificationCompat;&#10;&#10;import com.google.android.gms.wearable.WearableListenerService;&#10;&#10;public class AudioReceiveService extends WearableListenerService {&#10;    // Note: EditSummaryActivity is NOT started directly here.&#10;    // It will only open when the user taps the notification.&#10;    private void showSummaryPendingNotification(String recognizedText) {&#10;        String channelId = &quot;summary_pending_channel&quot;;&#10;        NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#10;        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {&#10;            NotificationChannel channel = new NotificationChannel(channelId, &quot;Summary Pending&quot;, NotificationManager.IMPORTANCE_DEFAULT);&#10;            notificationManager.createNotificationChannel(channel);&#10;        }&#10;        Intent intent = new Intent(this, EditSummaryActivity.class);&#10;        intent.putExtra(&quot;minutes&quot;, recognizedText);&#10;        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);&#10;        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, channelId)&#10;            .setSmallIcon(android.R.drawable.ic_popup_sync)&#10;            .setContentTitle(&quot;EchoNote&quot;)&#10;            .setContentText(&quot;Tap to edit your new note.&quot;)&#10;            .setPriority(NotificationCompat.PRIORITY_DEFAULT)&#10;            .setContentIntent(pendingIntent)&#10;            .setAutoCancel(true);&#10;        notificationManager.notify(1001, builder.build());&#10;    }&#10;&#10;    @Override&#10;    public void onMessageReceived(com.google.android.gms.wearable.MessageEvent messageEvent) {&#10;        Log.d(&quot;AudioReceiveService&quot;, &quot;onMessageReceived called&quot;);&#10;        if (&quot;/recognized_text&quot;.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Received recognized text: &quot; + recognizedText);&#10;            // Show notification only, do NOT start EditSummaryActivity directly.&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Calling showSummaryPendingNotification&quot;);&#10;            showSummaryPendingNotification(recognizedText);&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Notification should be shown&quot;);&#10;            // Add note with pending summary&#10;            MOMListActivity.addNote(new MOMNote(&#10;                &quot;New Note&quot;, // title&#10;                &quot;&quot;, // summary (empty while pending)&#10;                &quot;&quot;, // actionPoints&#10;                recognizedText, // minutes (raw text)&#10;                System.currentTimeMillis(),&#10;                &quot;&quot;, // tag&#10;                false, // isRead&#10;                true // isSummaryPending&#10;            ));&#10;            GeminiTranscribeAndSummarize.start(AudioReceiveService.this, recognizedText);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.NotificationChannel;&#10;import android.app.NotificationManager;&#10;import android.app.PendingIntent;&#10;import android.content.Context;&#10;import android.content.Intent;&#10;import android.os.Build;&#10;import android.util.Log;&#10;&#10;import androidx.core.app.NotificationCompat;&#10;&#10;import com.google.android.gms.wearable.WearableListenerService;&#10;&#10;public class AudioReceiveService extends WearableListenerService {&#10;    // Note: EditSummaryActivity is NOT started directly here.&#10;    // It will only open when the user taps the notification.&#10;    private void showSummaryPendingNotification(String recognizedText) {&#10;        String channelId = &quot;summary_pending_channel&quot;;&#10;        NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#10;        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {&#10;            NotificationChannel channel = new NotificationChannel(channelId, &quot;Summary Pending&quot;, NotificationManager.IMPORTANCE_DEFAULT);&#10;            notificationManager.createNotificationChannel(channel);&#10;        }&#10;        Intent intent = new Intent(this, EditSummaryActivity.class);&#10;        intent.putExtra(&quot;minutes&quot;, recognizedText);&#10;        // Use a unique request code for PendingIntent&#10;        int requestCode = (int) System.currentTimeMillis();&#10;        PendingIntent pendingIntent = PendingIntent.getActivity(this, requestCode, intent, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);&#10;        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, channelId)&#10;            .setSmallIcon(android.R.drawable.ic_popup_sync)&#10;            .setContentTitle(&quot;EchoNote&quot;)&#10;            .setContentText(&quot;Tap to edit your new note.&quot;)&#10;            .setPriority(NotificationCompat.PRIORITY_DEFAULT)&#10;            .setContentIntent(pendingIntent)&#10;            .setAutoCancel(true);&#10;        notificationManager.notify(1001, builder.build());&#10;    }&#10;&#10;    @Override&#10;    public void onMessageReceived(com.google.android.gms.wearable.MessageEvent messageEvent) {&#10;        Log.d(&quot;AudioReceiveService&quot;, &quot;onMessageReceived called&quot;);&#10;        if (&quot;/recognized_text&quot;.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Received recognized text: &quot; + recognizedText);&#10;            // Show notification only, do NOT start EditSummaryActivity directly.&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Calling showSummaryPendingNotification&quot;);&#10;            showSummaryPendingNotification(recognizedText);&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Notification should be shown&quot;);&#10;            // Add note with pending summary&#10;            MOMListActivity.addNote(new MOMNote(&#10;                &quot;New Note&quot;, // title&#10;                &quot;&quot;, // summary (empty while pending)&#10;                &quot;&quot;, // actionPoints&#10;                recognizedText, // minutes (raw text)&#10;                System.currentTimeMillis(),&#10;                &quot;&quot;, // tag&#10;                false, // isRead&#10;                true // isSummaryPending&#10;            ));&#10;            GeminiTranscribeAndSummarize.start(AudioReceiveService.this, recognizedText);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/EditSummaryActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/EditSummaryActivity.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.app.AlertDialog;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.util.Log;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Toast;&#10;&#10;import com.example.mobile.databinding.ActivityEditSummaryBinding;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.io.IOException;&#10;import java.util.ArrayList;&#10;&#10;import okhttp3.Call;&#10;import okhttp3.Callback;&#10;import okhttp3.MediaType;&#10;import okhttp3.OkHttpClient;&#10;import okhttp3.Request;&#10;import okhttp3.RequestBody;&#10;import okhttp3.Response;&#10;&#10;public class EditSummaryActivity extends Activity {&#10;    private ActivityEditSummaryBinding binding;&#10;    private ArrayAdapter&lt;String&gt; tagAdapter;&#10;    private ArrayList&lt;String&gt; tagList = new ArrayList&lt;&gt;();&#10;    private String minutes;&#10;&#10;    private static final String TAG = &quot;EditSummaryActivity&quot;;&#10;    private static final String PREF_TAGS = &quot;mom_tags&quot;;&#10;    private static final String PREF_TAGS_KEY = &quot;tags_list&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        binding = ActivityEditSummaryBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Load tags from SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(PREF_TAGS, MODE_PRIVATE);&#10;        tagList.clear();&#10;        tagList.addAll(prefs.getStringSet(PREF_TAGS_KEY, new java.util.HashSet&lt;String&gt;()));&#10;        if (tagList.isEmpty()) {&#10;            tagList.add(&quot;General&quot;);&#10;            tagList.add(&quot;Project&quot;);&#10;            tagList.add(&quot;Meeting&quot;);&#10;        }&#10;        tagAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, tagList);&#10;        tagAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        binding.spinnerTags.setAdapter(tagAdapter);&#10;        Intent intent = getIntent();&#10;        String title = intent.getStringExtra(&quot;title&quot;);&#10;        minutes = intent.getStringExtra(&quot;minutes&quot;);&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;&#10;&#10;        binding.etTitle.setText(title);&#10;        binding.tvMinutes.setText(&quot;Generating...&quot;);&#10;&#10;        if (tag != null &amp;&amp; tagList.contains(tag)) {&#10;            binding.spinnerTags.setSelection(tagList.indexOf(tag));&#10;        }&#10;&#10;        binding.btnAddTag.setOnClickListener(v -&gt; showAddTagDialog());&#10;&#10;        generateMinutesFromGemini(minutes);&#10;&#10;        binding.btnSave.setOnClickListener(v -&gt; {&#10;            String selectedTag = binding.spinnerTags.getSelectedItem().toString();&#10;            String noteTitle = binding.etTitle.getText().toString();&#10;            String generatedMinutes = binding.tvMinutes.getText().toString();&#10;&#10;            MOMListActivity.addNote(new MOMNote(noteTitle, &quot;&quot;, &quot;&quot;, generatedMinutes, System.currentTimeMillis(), selectedTag, false, false));&#10;&#10;            Toast.makeText(this, &quot;Note saved!&quot;, Toast.LENGTH_SHORT).show();&#10;            Intent listIntent = new Intent(EditSummaryActivity.this, MOMListActivity.class);&#10;            listIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);&#10;            startActivity(listIntent);&#10;            finish();&#10;        });&#10;    }&#10;&#10;    private void showAddTagDialog() {&#10;        AlertDialog.Builder builder = new AlertDialog.Builder(this);&#10;        builder.setTitle(&quot;Add New Tag&quot;);&#10;        final android.widget.EditText input = new android.widget.EditText(this);&#10;        builder.setView(input);&#10;        builder.setPositiveButton(&quot;Add&quot;, (dialog, which) -&gt; {&#10;            String newTag = input.getText().toString().trim();&#10;            if (!newTag.isEmpty() &amp;&amp; !tagList.contains(newTag)) {&#10;                tagList.add(newTag);&#10;                tagAdapter.notifyDataSetChanged();&#10;                binding.spinnerTags.setSelection(tagList.size() - 1);&#10;                // Save updated tags to SharedPreferences&#10;                SharedPreferences prefs = getSharedPreferences(PREF_TAGS, MODE_PRIVATE);&#10;                java.util.HashSet&lt;String&gt; set = new java.util.HashSet&lt;&gt;(tagList);&#10;                prefs.edit().putStringSet(PREF_TAGS_KEY, set).apply();&#10;            }&#10;        });&#10;        builder.setNegativeButton(&quot;Cancel&quot;, (dialog, which) -&gt; dialog.cancel());&#10;        builder.show();&#10;    }&#10;&#10;    private void generateMinutesFromGemini(String inputText) {&#10;        String apiUrl = &quot;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyAHmf5T-CuTrlGdzXP4g7qKtnJzL68X7E4&quot;;&#10;        OkHttpClient client = new OkHttpClient();&#10;        JSONObject json = new JSONObject();&#10;&#10;        try {&#10;            JSONArray contents = new JSONArray();&#10;            JSONObject contentObj = new JSONObject();&#10;            JSONArray parts = new JSONArray();&#10;            JSONObject partObj = new JSONObject();&#10;&#10;            String prompt = &quot;You are an assistant that generates professional Minutes of Meeting from any raw transcript. &quot;&#10;                    + &quot;Summarize the main points clearly in bullet points. &quot;&#10;                    + &quot;If specific meeting details like title, date, attendees, or agenda are missing, just summarize the information given. &quot;&#10;                    + &quot;Output only the bullet points, no extra explanation.\n\n&quot;&#10;                    + &quot;Transcript:\n&quot; + inputText;&#10;&#10;            partObj.put(&quot;text&quot;, prompt);&#10;            parts.put(partObj);&#10;            contentObj.put(&quot;parts&quot;, parts);&#10;            contents.put(contentObj);&#10;            json.put(&quot;contents&quot;, contents);&#10;        } catch (Exception e) {&#10;            runOnUiThread(() -&gt; binding.tvMinutes.setText(&quot;Error preparing request&quot;));&#10;            return;&#10;        }&#10;&#10;        RequestBody body = RequestBody.create(json.toString(), MediaType.get(&quot;application/json&quot;));&#10;        Request request = new Request.Builder().url(apiUrl).post(body).build();&#10;&#10;        client.newCall(request).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(Call call, IOException e) {&#10;                new Handler(Looper.getMainLooper()).post(() -&gt; binding.tvMinutes.setText(&quot;Error generating minutes: &quot; + e.getMessage()));&#10;            }&#10;&#10;            @Override&#10;            public void onResponse(Call call, Response response) throws IOException {&#10;                String result = response.body().string();&#10;&#10;                Log.d(TAG, &quot;Full Gemini response: &quot; + result);&#10;&#10;                String points = &quot;No minutes generated&quot;;&#10;&#10;                try {&#10;                    JSONObject obj = new JSONObject(result);&#10;                    if (obj.has(&quot;candidates&quot;)) {&#10;                        JSONArray candidates = obj.getJSONArray(&quot;candidates&quot;);&#10;                        if (candidates.length() &gt; 0) {&#10;                            JSONObject firstCandidate = candidates.getJSONObject(0);&#10;                            if (firstCandidate.has(&quot;content&quot;)) {&#10;                                JSONObject content = firstCandidate.getJSONObject(&quot;content&quot;);&#10;                                if (content.has(&quot;parts&quot;)) {&#10;                                    JSONArray parts = content.getJSONArray(&quot;parts&quot;);&#10;                                    if (parts.length() &gt; 0) {&#10;                                        JSONObject firstPart = parts.getJSONObject(0);&#10;                                        points = firstPart.optString(&quot;text&quot;, &quot;No minutes generated&quot;);&#10;                                    }&#10;                                }&#10;                            }&#10;                        }&#10;                    } else if (obj.has(&quot;error&quot;)) {&#10;                        points = &quot;API Error: &quot; + obj.getJSONObject(&quot;error&quot;).optString(&quot;message&quot;, &quot;Unknown error&quot;);&#10;                    }&#10;                } catch (Exception e) {&#10;                    points = &quot;Error parsing response: &quot; + e.getMessage();&#10;                    Log.e(TAG, &quot;JSON parsing error&quot;, e);&#10;                }&#10;&#10;                final String finalPoints = points;&#10;                new Handler(Looper.getMainLooper()).post(() -&gt; binding.tvMinutes.setText(finalPoints));&#10;            }&#10;        });&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.app.AlertDialog;&#10;import android.content.Intent;&#10;import android.content.SharedPreferences;&#10;import android.os.Bundle;&#10;import android.os.Handler;&#10;import android.os.Looper;&#10;import android.util.Log;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Toast;&#10;&#10;import com.example.mobile.databinding.ActivityEditSummaryBinding;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONObject;&#10;&#10;import java.io.IOException;&#10;import java.util.ArrayList;&#10;&#10;import okhttp3.Call;&#10;import okhttp3.Callback;&#10;import okhttp3.MediaType;&#10;import okhttp3.OkHttpClient;&#10;import okhttp3.Request;&#10;import okhttp3.RequestBody;&#10;import okhttp3.Response;&#10;&#10;public class EditSummaryActivity extends Activity {&#10;    private ActivityEditSummaryBinding binding;&#10;    private ArrayAdapter&lt;String&gt; tagAdapter;&#10;    private ArrayList&lt;String&gt; tagList = new ArrayList&lt;&gt;();&#10;    private String minutes;&#10;&#10;    private static final String TAG = &quot;EditSummaryActivity&quot;;&#10;    private static final String PREF_TAGS = &quot;mom_tags&quot;;&#10;    private static final String PREF_TAGS_KEY = &quot;tags_list&quot;;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        binding = ActivityEditSummaryBinding.inflate(getLayoutInflater());&#10;        setContentView(binding.getRoot());&#10;&#10;        // Load tags from SharedPreferences&#10;        SharedPreferences prefs = getSharedPreferences(PREF_TAGS, MODE_PRIVATE);&#10;        tagList.clear();&#10;        tagList.addAll(prefs.getStringSet(PREF_TAGS_KEY, new java.util.HashSet&lt;String&gt;()));&#10;        if (tagList.isEmpty()) {&#10;            tagList.add(&quot;General&quot;);&#10;            tagList.add(&quot;Project&quot;);&#10;            tagList.add(&quot;Meeting&quot;);&#10;            // Save default tags to preferences if not present&#10;            prefs.edit().putStringSet(PREF_TAGS_KEY, new java.util.HashSet&lt;&gt;(tagList)).apply();&#10;        }&#10;        tagAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, tagList);&#10;        tagAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        binding.spinnerTags.setAdapter(tagAdapter);&#10;        Intent intent = getIntent();&#10;        String title = intent.getStringExtra(&quot;title&quot;);&#10;        minutes = intent.getStringExtra(&quot;minutes&quot;);&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;&#10;&#10;        binding.etTitle.setText(title);&#10;        binding.tvMinutes.setText(&quot;Generating...&quot;);&#10;&#10;        if (tag != null &amp;&amp; tagList.contains(tag)) {&#10;            binding.spinnerTags.setSelection(tagList.indexOf(tag));&#10;        }&#10;&#10;        binding.btnAddTag.setOnClickListener(v -&gt; showAddTagDialog());&#10;&#10;        generateMinutesFromGemini(minutes);&#10;&#10;        binding.btnSave.setOnClickListener(v -&gt; {&#10;            String selectedTag = binding.spinnerTags.getSelectedItem().toString();&#10;            String noteTitle = binding.etTitle.getText().toString();&#10;            String generatedMinutes = binding.tvMinutes.getText().toString();&#10;&#10;            MOMListActivity.addNote(new MOMNote(noteTitle, &quot;&quot;, &quot;&quot;, generatedMinutes, System.currentTimeMillis(), selectedTag, false, false));&#10;&#10;            Toast.makeText(this, &quot;Note saved!&quot;, Toast.LENGTH_SHORT).show();&#10;            Intent listIntent = new Intent(EditSummaryActivity.this, MOMListActivity.class);&#10;            listIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);&#10;            startActivity(listIntent);&#10;            finish();&#10;        });&#10;    }&#10;&#10;    private void showAddTagDialog() {&#10;        AlertDialog.Builder builder = new AlertDialog.Builder(this);&#10;        builder.setTitle(&quot;Add New Tag&quot;);&#10;        final android.widget.EditText input = new android.widget.EditText(this);&#10;        builder.setView(input);&#10;        builder.setPositiveButton(&quot;Add&quot;, (dialog, which) -&gt; {&#10;            String newTag = input.getText().toString().trim();&#10;            if (!newTag.isEmpty()) {&#10;                SharedPreferences prefs = getSharedPreferences(PREF_TAGS, MODE_PRIVATE);&#10;                java.util.HashSet&lt;String&gt; set = new java.util.HashSet&lt;&gt;(prefs.getStringSet(PREF_TAGS_KEY, new java.util.HashSet&lt;String&gt;()));&#10;                if (!set.contains(newTag)) {&#10;                    set.add(newTag);&#10;                    prefs.edit().putStringSet(PREF_TAGS_KEY, set).apply();&#10;                    tagList.clear();&#10;                    tagList.addAll(set);&#10;                    tagAdapter.notifyDataSetChanged();&#10;                    binding.spinnerTags.setSelection(tagList.size() - 1);&#10;                }&#10;            }&#10;        });&#10;        builder.setNegativeButton(&quot;Cancel&quot;, (dialog, which) -&gt; dialog.cancel());&#10;        builder.show();&#10;    }&#10;&#10;    private void generateMinutesFromGemini(String inputText) {&#10;        String apiUrl = &quot;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyAHmf5T-CuTrlGdzXP4g7qKtnJzL68X7E4&quot;;&#10;        OkHttpClient client = new OkHttpClient();&#10;        JSONObject json = new JSONObject();&#10;&#10;        try {&#10;            JSONArray contents = new JSONArray();&#10;            JSONObject contentObj = new JSONObject();&#10;            JSONArray parts = new JSONArray();&#10;            JSONObject partObj = new JSONObject();&#10;&#10;            String prompt = &quot;You are an assistant that generates professional Minutes of Meeting from any raw transcript. &quot;&#10;                    + &quot;Summarize the main points clearly in bullet points. &quot;&#10;                    + &quot;If specific meeting details like title, date, attendees, or agenda are missing, just summarize the information given. &quot;&#10;                    + &quot;Output only the bullet points, no extra explanation.\n\n&quot;&#10;                    + &quot;Transcript:\n&quot; + inputText;&#10;&#10;            partObj.put(&quot;text&quot;, prompt);&#10;            parts.put(partObj);&#10;            contentObj.put(&quot;parts&quot;, parts);&#10;            contents.put(contentObj);&#10;            json.put(&quot;contents&quot;, contents);&#10;        } catch (Exception e) {&#10;            runOnUiThread(() -&gt; binding.tvMinutes.setText(&quot;Error preparing request&quot;));&#10;            return;&#10;        }&#10;&#10;        RequestBody body = RequestBody.create(json.toString(), MediaType.get(&quot;application/json&quot;));&#10;        Request request = new Request.Builder().url(apiUrl).post(body).build();&#10;&#10;        client.newCall(request).enqueue(new Callback() {&#10;            @Override&#10;            public void onFailure(Call call, IOException e) {&#10;                new Handler(Looper.getMainLooper()).post(() -&gt; binding.tvMinutes.setText(&quot;Error generating minutes: &quot; + e.getMessage()));&#10;            }&#10;&#10;            @Override&#10;            public void onResponse(Call call, Response response) throws IOException {&#10;                String result = response.body().string();&#10;&#10;                Log.d(TAG, &quot;Full Gemini response: &quot; + result);&#10;&#10;                String points = &quot;No minutes generated&quot;;&#10;&#10;                try {&#10;                    JSONObject obj = new JSONObject(result);&#10;                    if (obj.has(&quot;candidates&quot;)) {&#10;                        JSONArray candidates = obj.getJSONArray(&quot;candidates&quot;);&#10;                        if (candidates.length() &gt; 0) {&#10;                            JSONObject firstCandidate = candidates.getJSONObject(0);&#10;                            if (firstCandidate.has(&quot;content&quot;)) {&#10;                                JSONObject content = firstCandidate.getJSONObject(&quot;content&quot;);&#10;                                if (content.has(&quot;parts&quot;)) {&#10;                                    JSONArray parts = content.getJSONArray(&quot;parts&quot;);&#10;                                    if (parts.length() &gt; 0) {&#10;                                        JSONObject firstPart = parts.getJSONObject(0);&#10;                                        points = firstPart.optString(&quot;text&quot;, &quot;No minutes generated&quot;);&#10;                                    }&#10;                                }&#10;                            }&#10;                        }&#10;                    } else if (obj.has(&quot;error&quot;)) {&#10;                        points = &quot;API Error: &quot; + obj.getJSONObject(&quot;error&quot;).optString(&quot;message&quot;, &quot;Unknown error&quot;);&#10;                    }&#10;                } catch (Exception e) {&#10;                    points = &quot;Error parsing response: &quot; + e.getMessage();&#10;                    Log.e(TAG, &quot;JSON parsing error&quot;, e);&#10;                }&#10;&#10;                final String finalPoints = points;&#10;                new Handler(Looper.getMainLooper()).post(() -&gt; binding.tvMinutes.setText(finalPoints));&#10;            }&#10;        });&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMAdapter.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.TextView;&#10;&#10;import com.example.mobile.MOMNote;&#10;&#10;import java.util.List;&#10;&#10;public class MOMAdapter extends ArrayAdapter&lt;MOMNote&gt; {&#10;    public MOMAdapter(Context context, List&lt;MOMNote&gt; notes) {&#10;        super(context, 0, notes);&#10;    }&#10;&#10;    @Override&#10;    public View getView(int position, View convertView, ViewGroup parent) {&#10;        MOMNote note = getItem(position);&#10;&#10;        if (convertView == null) {&#10;            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_mom, parent, false);&#10;        }&#10;&#10;        TextView titleView = (TextView) convertView.findViewById(R.id.mom_title);&#10;        TextView summaryView = (TextView) convertView.findViewById(R.id.mom_summary);&#10;        TextView dateView = (TextView) convertView.findViewById(R.id.mom_date);&#10;        TextView tagView = convertView.findViewById(R.id.mom_tag);&#10;        TextView readStatusView = convertView.findViewById(R.id.mom_read_status);&#10;&#10;        titleView.setText(note.getTitle());&#10;        summaryView.setText(note.getSummary());&#10;        dateView.setText(android.text.format.DateFormat.format(&quot;yyyy-MM-dd HH:mm&quot;, note.getTimestamp()));&#10;        tagView.setText(note.getTag());&#10;        readStatusView.setText(note.isRead() ? &quot;Read&quot; : &quot;Unread&quot;);&#10;&#10;        return convertView;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;&#10;import com.example.mobile.MOMNote;&#10;&#10;import java.util.List;&#10;&#10;public class MOMAdapter extends ArrayAdapter&lt;MOMNote&gt; {&#10;    public MOMAdapter(Context context, List&lt;MOMNote&gt; notes) {&#10;        super(context, 0, notes);&#10;    }&#10;&#10;    @Override&#10;    public View getView(int position, View convertView, ViewGroup parent) {&#10;        MOMNote note = getItem(position);&#10;&#10;        if (convertView == null) {&#10;            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_mom, parent, false);&#10;        }&#10;&#10;        TextView minutesView = (TextView) convertView.findViewById(R.id.mom_minutes);&#10;        // Only display the minutes (recognized text)&#10;        minutesView.setText(note.getMinutes());&#10;        // Hide other views if present&#10;        TextView titleView = convertView.findViewById(R.id.mom_title);&#10;        TextView summaryView = convertView.findViewById(R.id.mom_summary);&#10;        TextView dateView = convertView.findViewById(R.id.mom_date);&#10;        TextView tagView = convertView.findViewById(R.id.mom_tag);&#10;        TextView readStatusView = convertView.findViewById(R.id.mom_read_status);&#10;        ProgressBar loader = convertView.findViewById(R.id.mom_loader);&#10;        TextView pendingMessage = convertView.findViewById(R.id.mom_pending_message);&#10;        if (titleView != null) titleView.setVisibility(View.GONE);&#10;        if (summaryView != null) summaryView.setVisibility(View.GONE);&#10;        if (dateView != null) dateView.setVisibility(View.GONE);&#10;        if (tagView != null) tagView.setVisibility(View.GONE);&#10;        if (readStatusView != null) readStatusView.setVisibility(View.GONE);&#10;        if (loader != null) loader.setVisibility(View.GONE);&#10;        if (pendingMessage != null) pendingMessage.setVisibility(View.GONE);&#10;        return convertView;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMDetailActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMDetailActivity.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import org.apache.poi.xwpf.usermodel.XWPFDocument;&#10;import org.apache.poi.xwpf.usermodel.XWPFParagraph;&#10;import org.apache.poi.xwpf.usermodel.XWPFRun;&#10;import java.io.File;&#10;import java.io.FileOutputStream;&#10;import java.text.SimpleDateFormat;&#10;&#10;public class MOMDetailActivity extends Activity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_mom_detail);&#10;&#10;        TextView titleView = findViewById(R.id.tv_title);&#10;        TextView dateView = findViewById(R.id.tv_date);&#10;        TextView tagView = findViewById(R.id.tv_tag);&#10;        TextView readView = findViewById(R.id.tv_read);&#10;        TextView summaryView = findViewById(R.id.tv_summary);&#10;        TextView actionPointsView = findViewById(R.id.tv_action_points);&#10;        TextView minutesView = findViewById(R.id.tv_minutes);&#10;        Button btnConvertToText = findViewById(R.id.btn_convert_text);&#10;        Button btnEdit = findViewById(R.id.btn_edit);&#10;        Button btnDelete = findViewById(R.id.btn_delete);&#10;        Button btnExport = findViewById(R.id.btn_export);&#10;&#10;        // Load data from intent&#10;        Intent intent = getIntent();&#10;        titleView.setText(intent.getStringExtra(&quot;title&quot;));&#10;        dateView.setText(android.text.format.DateFormat.format(&quot;yyyy-MM-dd HH:mm&quot;, intent.getLongExtra(&quot;timestamp&quot;, 0)));&#10;        summaryView.setText(intent.getStringExtra(&quot;summary&quot;));&#10;        actionPointsView.setText(intent.getStringExtra(&quot;action_points&quot;));&#10;        minutesView.setText(intent.getStringExtra(&quot;minutes&quot;));&#10;&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;        boolean isRead = intent.getBooleanExtra(&quot;isRead&quot;, false);&#10;        tagView.setText(tag);&#10;        readView.setText(isRead ? &quot;Read&quot; : &quot;Unread&quot;);&#10;        tagView.setVisibility(View.VISIBLE);&#10;        readView.setVisibility(View.VISIBLE);&#10;&#10;        btnConvertToText.setOnClickListener(v -&gt; convertVoiceToText());&#10;&#10;        btnEdit.setOnClickListener(v -&gt; {&#10;            Intent editIntent = new Intent(MOMDetailActivity.this, EditSummaryActivity.class);&#10;            editIntent.putExtra(&quot;title&quot;, titleView.getText().toString());&#10;            editIntent.putExtra(&quot;summary&quot;, summaryView.getText().toString());&#10;            editIntent.putExtra(&quot;action_points&quot;, actionPointsView.getText().toString());&#10;            editIntent.putExtra(&quot;minutes&quot;, minutesView.getText().toString());&#10;            editIntent.putExtra(&quot;timestamp&quot;, getIntent().getLongExtra(&quot;timestamp&quot;, 0));&#10;            editIntent.putExtra(&quot;tag&quot;, tagView.getText().toString());&#10;            startActivity(editIntent);&#10;            finish();&#10;        });&#10;&#10;        btnDelete.setOnClickListener(v -&gt; {&#10;            long timestamp = getIntent().getLongExtra(&quot;timestamp&quot;, 0);&#10;            MOMListActivity.deleteNoteByTimestamp(timestamp);&#10;            Toast.makeText(MOMDetailActivity.this, &quot;Note deleted.&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;        });&#10;&#10;        btnExport.setOnClickListener(v -&gt; {&#10;            try {&#10;                // Gather MOM details&#10;                String title = titleView.getText().toString();&#10;                String date = dateView.getText().toString();&#10;                String tagValue = tagView.getText().toString(); // Avoid variable name conflict&#10;                String summary = summaryView.getText().toString();&#10;                String actionPoints = actionPointsView.getText().toString();&#10;                String minutes = minutesView.getText().toString();&#10;&#10;                // Create Word document&#10;                XWPFDocument doc = new XWPFDocument();&#10;                XWPFParagraph p1 = doc.createParagraph();&#10;                XWPFRun r1 = p1.createRun();&#10;                r1.setBold(true);&#10;                r1.setFontSize(18);&#10;                r1.setText(&quot;Minutes of Meeting&quot;);&#10;                r1.addBreak();&#10;&#10;                XWPFParagraph p2 = doc.createParagraph();&#10;                XWPFRun r2 = p2.createRun();&#10;                r2.setText(&quot;Title: &quot; + title);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Date: &quot; + date);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Tag: &quot; + tagValue);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Summary: &quot; + summary);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Action Points: &quot; + actionPoints);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Minutes:&quot;);&#10;                r2.addBreak();&#10;                r2.setText(minutes);&#10;&#10;                // Save to Downloads directory&#10;                File dir = android.os.Environment.getExternalStoragePublicDirectory(android.os.Environment.DIRECTORY_DOWNLOADS);&#10;                if (dir != null &amp;&amp; !dir.exists()) dir.mkdirs();&#10;                File file = new File(dir, fileName);&#10;                FileOutputStream fos = new FileOutputStream(file);&#10;                doc.write(fos);&#10;                fos.close();&#10;                doc.close();&#10;&#10;                Toast.makeText(MOMDetailActivity.this, &quot;Exported as Word file: &quot; + file.getAbsolutePath(), Toast.LENGTH_LONG).show();&#10;            } catch (Exception e) {&#10;                Toast.makeText(MOMDetailActivity.this, &quot;Export failed: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;            }&#10;        });&#10;    }&#10;&#10;    private void convertVoiceToText() {&#10;        // TODO: Call Gemini 2.0 API using API key&#10;        Toast.makeText(this, &quot;Transcription started (stub)&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import org.apache.poi.xwpf.usermodel.XWPFDocument;&#10;import org.apache.poi.xwpf.usermodel.XWPFParagraph;&#10;import org.apache.poi.xwpf.usermodel.XWPFRun;&#10;import java.io.File;&#10;import java.io.FileOutputStream;&#10;import java.text.SimpleDateFormat;&#10;&#10;public class MOMDetailActivity extends Activity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_mom_detail);&#10;&#10;        TextView titleView = findViewById(R.id.tv_title);&#10;        TextView dateView = findViewById(R.id.tv_date);&#10;        TextView tagView = findViewById(R.id.tv_tag);&#10;        TextView readView = findViewById(R.id.tv_read);&#10;        TextView summaryView = findViewById(R.id.tv_summary);&#10;        TextView actionPointsView = findViewById(R.id.tv_action_points);&#10;        TextView minutesView = findViewById(R.id.tv_minutes);&#10;        Button btnConvertToText = findViewById(R.id.btn_convert_text);&#10;        Button btnEdit = findViewById(R.id.btn_edit);&#10;        Button btnDelete = findViewById(R.id.btn_delete);&#10;        Button btnExport = findViewById(R.id.btn_export);&#10;&#10;        // Load data from intent&#10;        Intent intent = getIntent();&#10;        titleView.setText(intent.getStringExtra(&quot;title&quot;));&#10;        dateView.setText(android.text.format.DateFormat.format(&quot;yyyy-MM-dd HH:mm&quot;, intent.getLongExtra(&quot;timestamp&quot;, 0)));&#10;        summaryView.setText(intent.getStringExtra(&quot;summary&quot;));&#10;        actionPointsView.setText(intent.getStringExtra(&quot;action_points&quot;));&#10;        minutesView.setText(intent.getStringExtra(&quot;minutes&quot;));&#10;&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;        boolean isRead = intent.getBooleanExtra(&quot;isRead&quot;, false);&#10;        tagView.setText(tag);&#10;        readView.setText(isRead ? &quot;Read&quot; : &quot;Unread&quot;);&#10;        tagView.setVisibility(View.VISIBLE);&#10;        readView.setVisibility(View.VISIBLE);&#10;&#10;        btnConvertToText.setOnClickListener(v -&gt; convertVoiceToText());&#10;&#10;        btnEdit.setOnClickListener(v -&gt; {&#10;            Intent editIntent = new Intent(MOMDetailActivity.this, EditSummaryActivity.class);&#10;            editIntent.putExtra(&quot;title&quot;, titleView.getText().toString());&#10;            editIntent.putExtra(&quot;summary&quot;, summaryView.getText().toString());&#10;            editIntent.putExtra(&quot;action_points&quot;, actionPointsView.getText().toString());&#10;            editIntent.putExtra(&quot;minutes&quot;, minutesView.getText().toString());&#10;            editIntent.putExtra(&quot;timestamp&quot;, getIntent().getLongExtra(&quot;timestamp&quot;, 0));&#10;            editIntent.putExtra(&quot;tag&quot;, tagView.getText().toString());&#10;            startActivity(editIntent);&#10;            finish();&#10;        });&#10;&#10;        btnDelete.setOnClickListener(v -&gt; {&#10;            long timestamp = getIntent().getLongExtra(&quot;timestamp&quot;, 0);&#10;            MOMListActivity.deleteNoteByTimestamp(timestamp);&#10;            Toast.makeText(MOMDetailActivity.this, &quot;Note deleted.&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;        });&#10;&#10;        btnExport.setOnClickListener(v -&gt; {&#10;            try {&#10;                // Gather MOM details&#10;                String title = titleView.getText().toString();&#10;                String date = dateView.getText().toString();&#10;                String tagValue = tagView.getText().toString(); // Avoid variable name conflict&#10;                String summary = summaryView.getText().toString();&#10;                String actionPoints = actionPointsView.getText().toString();&#10;                String minutes = minutesView.getText().toString();&#10;&#10;                // Create Word document&#10;                XWPFDocument doc = new XWPFDocument();&#10;                XWPFParagraph p1 = doc.createParagraph();&#10;                XWPFRun r1 = p1.createRun();&#10;                r1.setBold(true);&#10;                r1.setFontSize(18);&#10;                r1.setText(&quot;Minutes of Meeting&quot;);&#10;                r1.addBreak();&#10;&#10;                XWPFParagraph p2 = doc.createParagraph();&#10;                XWPFRun r2 = p2.createRun();&#10;                r2.setText(&quot;Title: &quot; + title);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Date: &quot; + date);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Tag: &quot; + tagValue);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Summary: &quot; + summary);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Action Points: &quot; + actionPoints);&#10;                r2.addBreak();&#10;                r2.setText(&quot;Minutes:&quot;);&#10;                r2.addBreak();&#10;                r2.setText(minutes);&#10;&#10;                // Save to Downloads directory&#10;                String fileName = &quot;MOM_&quot; + new SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;).format(System.currentTimeMillis()) + &quot;.docx&quot;;&#10;                File dir = android.os.Environment.getExternalStoragePublicDirectory(android.os.Environment.DIRECTORY_DOWNLOADS);&#10;                if (dir != null &amp;&amp; !dir.exists()) dir.mkdirs();&#10;                File file = new File(dir, fileName);&#10;                FileOutputStream fos = new FileOutputStream(file);&#10;                doc.write(fos);&#10;                fos.close();&#10;                doc.close();&#10;&#10;                Toast.makeText(MOMDetailActivity.this, &quot;Exported as Word file: &quot; + file.getAbsolutePath(), Toast.LENGTH_LONG).show();&#10;            } catch (Exception e) {&#10;                Toast.makeText(MOMDetailActivity.this, &quot;Export failed: &quot; + e.getMessage(), Toast.LENGTH_LONG).show();&#10;            }&#10;        });&#10;    }&#10;&#10;    private void convertVoiceToText() {&#10;        // TODO: Call Gemini 2.0 API using API key&#10;        Toast.makeText(this, &quot;Transcription started (stub)&quot;, Toast.LENGTH_SHORT).show();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMListActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMListActivity.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;import com.example.shared.MOM;  // If in shared module&#10;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.AdapterView;&#10;import android.widget.ListView;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class MOMListActivity extends Activity {&#10;&#10;    private ListView listView;&#10;    private MOMAdapter adapter;&#10;    private static ArrayList&lt;MOMNote&gt; momNotes = new ArrayList&lt;&gt;();&#10;    private static ArrayList&lt;MOMNote&gt; filteredNotes = new ArrayList&lt;&gt;();&#10;&#10;    public static void addNote(MOMNote note) {&#10;        momNotes.add(note);&#10;        Collections.sort(momNotes, (a, b) -&gt; Long.compare(b.getTimestamp(), a.getTimestamp()));&#10;        // Also add to filteredNotes if no filter is applied&#10;        // If filteredNotes contains all notes, update it&#10;        if (filteredNotes.size() == momNotes.size() - 1 || filteredNotes.isEmpty()) {&#10;            filteredNotes.add(note);&#10;            Collections.sort(filteredNotes, (a, b) -&gt; Long.compare(b.getTimestamp(), a.getTimestamp()));&#10;        }&#10;    }&#10;&#10;    private void updateAdapter() {&#10;        if (adapter != null) {&#10;            adapter.notifyDataSetChanged();&#10;        }&#10;    }&#10;&#10;    public void filterByTag(String tag) {&#10;        filteredNotes.clear();&#10;        for (MOMNote note : momNotes) {&#10;            if (note.getTag() != null &amp;&amp; note.getTag().equalsIgnoreCase(tag)) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        updateAdapter();&#10;    }&#10;    public void filterByReadStatus(boolean isRead) {&#10;        filteredNotes.clear();&#10;        for (MOMNote note : momNotes) {&#10;            if (note.isRead() == isRead) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        updateAdapter();&#10;    }&#10;    public void clearFilter() {&#10;        filteredNotes.clear();&#10;        filteredNotes.addAll(momNotes);&#10;        updateAdapter();&#10;    }&#10;    public static void deleteNoteByTimestamp(long timestamp) {&#10;        for (int i = 0; i &lt; momNotes.size(); i++) {&#10;            if (momNotes.get(i).getTimestamp() == timestamp) {&#10;                momNotes.remove(i);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_mom_list);&#10;&#10;        listView = (ListView) findViewById(R.id.mom_list_view);&#10;&#10;        filteredNotes.addAll(momNotes);&#10;        adapter = new MOMAdapter(this, filteredNotes);&#10;        listView.setAdapter(adapter);&#10;&#10;        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {&#10;            @Override&#10;            public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {&#10;                MOMNote note = momNotes.get(position);&#10;                note.setRead(true);&#10;                Intent intent = new Intent(MOMListActivity.this, MOMDetailActivity.class);&#10;                intent.putExtra(&quot;title&quot;, note.getTitle());&#10;                intent.putExtra(&quot;summary&quot;, note.getSummary());&#10;                intent.putExtra(&quot;action_points&quot;, note.getActionPoints());&#10;                intent.putExtra(&quot;minutes&quot;, note.getMinutes());&#10;                intent.putExtra(&quot;timestamp&quot;, note.getTimestamp());&#10;                intent.putExtra(&quot;tag&quot;, note.getTag());&#10;                intent.putExtra(&quot;isRead&quot;, note.isRead());&#10;                startActivity(intent);&#10;            }&#10;        });&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;import com.example.shared.MOM;  // If in shared module&#10;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.AdapterView;&#10;import android.widget.ListView;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class MOMListActivity extends Activity {&#10;&#10;    private ListView listView;&#10;    private MOMAdapter adapter;&#10;    private static ArrayList&lt;MOMNote&gt; momNotes = new ArrayList&lt;&gt;();&#10;    private static ArrayList&lt;MOMNote&gt; filteredNotes = new ArrayList&lt;&gt;();&#10;&#10;    public static void addNote(MOMNote note) {&#10;        momNotes.add(note);&#10;        Collections.sort(momNotes, (a, b) -&gt; Long.compare(b.getTimestamp(), a.getTimestamp()));&#10;        // Also add to filteredNotes if no filter is applied&#10;        // If filteredNotes contains all notes, update it&#10;        if (filteredNotes.size() == momNotes.size() - 1 || filteredNotes.isEmpty()) {&#10;            filteredNotes.add(note);&#10;            Collections.sort(filteredNotes, (a, b) -&gt; Long.compare(b.getTimestamp(), a.getTimestamp()));&#10;        }&#10;    }&#10;&#10;    private void updateAdapter() {&#10;        if (adapter != null) {&#10;            adapter.notifyDataSetChanged();&#10;        }&#10;    }&#10;&#10;    public void filterByTag(String tag) {&#10;        filteredNotes.clear();&#10;        for (MOMNote note : momNotes) {&#10;            if (note.getTag() != null &amp;&amp; note.getTag().equalsIgnoreCase(tag)) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        updateAdapter();&#10;    }&#10;    public void filterByReadStatus(boolean isRead) {&#10;        filteredNotes.clear();&#10;        for (MOMNote note : momNotes) {&#10;            if (note.isRead() == isRead) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        updateAdapter();&#10;    }&#10;    public void clearFilter() {&#10;        filteredNotes.clear();&#10;        filteredNotes.addAll(momNotes);&#10;        updateAdapter();&#10;    }&#10;    public static void deleteNoteByTimestamp(long timestamp) {&#10;        for (int i = 0; i &lt; momNotes.size(); i++) {&#10;            if (momNotes.get(i).getTimestamp() == timestamp) {&#10;                momNotes.remove(i);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_mom_list);&#10;&#10;        listView = (ListView) findViewById(R.id.mom_list_view);&#10;&#10;        filteredNotes.addAll(momNotes);&#10;        adapter = new MOMAdapter(this, filteredNotes);&#10;        listView.setAdapter(adapter);&#10;&#10;        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {&#10;            @Override&#10;            public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {&#10;                MOMNote note = momNotes.get(position);&#10;                note.setRead(true);&#10;                Intent intent = new Intent(MOMListActivity.this, MOMDetailActivity.class);&#10;                intent.putExtra(&quot;title&quot;, note.getTitle());&#10;                intent.putExtra(&quot;summary&quot;, note.getSummary());&#10;                intent.putExtra(&quot;action_points&quot;, note.getActionPoints());&#10;                intent.putExtra(&quot;minutes&quot;, note.getMinutes());&#10;                intent.putExtra(&quot;timestamp&quot;, note.getTimestamp());&#10;                intent.putExtra(&quot;tag&quot;, note.getTag());&#10;                intent.putExtra(&quot;isRead&quot;, note.isRead());&#10;                startActivity(intent);&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Refresh filteredNotes and notify adapter&#10;        filteredNotes.clear();&#10;        filteredNotes.addAll(momNotes);&#10;        if (adapter != null) {&#10;            adapter.notifyDataSetChanged();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MainActivity_mobile.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MainActivity_mobile.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.widget.Button;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;&#10;import com.google.android.gms.wearable.MessageClient;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.Wearable;&#10;&#10;public class MainActivity_mobile extends Activity {&#10;&#10;    private static final String TAG = &quot;MainActivity_mobile&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    private Button btnMOMList;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main_mobile);&#10;&#10;        btnMOMList = findViewById(R.id.btn_mom_list);&#10;&#10;        btnMOMList.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(MainActivity_mobile.this, MOMListActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.content.pm.PackageManager;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.widget.Button;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;&#10;import com.google.android.gms.wearable.MessageClient;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.Wearable;&#10;&#10;public class MainActivity_mobile extends Activity {&#10;&#10;    private static final String TAG = &quot;MainActivity_mobile&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    private Button btnMOMList;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main_mobile);&#10;&#10;        // Request notification permission for Android 13+&#10;        if (android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.TIRAMISU) {&#10;            if (checkSelfPermission(android.Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {&#10;                requestPermissions(new String[]{android.Manifest.permission.POST_NOTIFICATIONS}, 1002);&#10;            }&#10;        }&#10;&#10;        btnMOMList = findViewById(R.id.btn_mom_list);&#10;&#10;        btnMOMList.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(MainActivity_mobile.this, MOMListActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/WearMessageListenerService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/WearMessageListenerService.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.util.Log;&#10;import android.widget.Toast;&#10;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.WearableListenerService;&#10;&#10;public class WearMessageListenerService extends WearableListenerService {&#10;&#10;    private static final String TAG = &quot;WearMsgListenerService&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    @Override&#10;    public void onMessageReceived(MessageEvent messageEvent) {&#10;        if (MESSAGE_PATH.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(TAG, &quot;Received from watch: &quot; + recognizedText);&#10;&#10;            // Add note to MOM list&#10;            MOMNote note = new MOMNote(&#10;                    recognizedText,&#10;                    &quot;Speech from watch&quot;,&#10;                    &quot;&quot;,&#10;                    &quot;&quot;,&#10;                    System.currentTimeMillis(),&#10;                    &quot;Voice&quot;,&#10;                    false&#10;            );&#10;            MOMListActivity.addNote(note);&#10;&#10;            // Optional toast (runs in background thread so use handler)&#10;            new android.os.Handler(getMainLooper()).post(() -&gt;&#10;                    Toast.makeText(getApplicationContext(), &quot;Note received from watch!&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        } else {&#10;            super.onMessageReceived(messageEvent);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.util.Log;&#10;import android.widget.Toast;&#10;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.WearableListenerService;&#10;&#10;public class WearMessageListenerService extends WearableListenerService {&#10;&#10;    private static final String TAG = &quot;WearMsgListenerService&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    @Override&#10;    public void onMessageReceived(MessageEvent messageEvent) {&#10;        if (MESSAGE_PATH.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(TAG, &quot;Received from watch: &quot; + recognizedText);&#10;&#10;            // Add note to MOM list&#10;            MOMNote note = new MOMNote(&#10;                    recognizedText,&#10;                    &quot;Speech from watch&quot;,&#10;                    &quot;&quot;,&#10;                    &quot;&quot;,&#10;                    System.currentTimeMillis(),&#10;                    &quot;Voice&quot;,&#10;                    false,&#10;                    false // isSummaryPending&#10;            );&#10;            MOMListActivity.addNote(note);&#10;&#10;            // Optional toast (runs in background thread so use handler)&#10;            new android.os.Handler(getMainLooper()).post(() -&gt;&#10;                    Toast.makeText(getApplicationContext(), &quot;Note received from watch!&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        } else {&#10;            super.onMessageReceived(messageEvent);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/res/layout/activity_edit_summary.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/res/layout/activity_edit_summary.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;24dp&quot;&gt;&#10;    &lt;LinearLayout&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_title_label&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Title&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Edit title&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_summary_label&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Short Summary&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_summary&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Edit summary&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_action_points_label&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Action Points&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_action_points&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_minutes_label&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Minutes of Meeting&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_minutes&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_tag_label&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Tag&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_tag&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Enter tag&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_filter_tag&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Filter by Tag&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;/&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_filter_read&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Show Read&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;/&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btn_filter_unread&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Show Unread&quot;/&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btn_save&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Save&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:backgroundTint=&quot;@color/design_default_color_primary&quot;&#10;            android:textColor=&quot;@android:color/white&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;/&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;24dp&quot;&gt;&#10;    &lt;LinearLayout&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_title_label&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Title&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/et_title&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Enter title&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_minutes_label&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Meeting Minutes (auto-generated)&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_minutes&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Generating...&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:background=&quot;#F5F5F5&quot;&#10;            android:padding=&quot;12dp&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;&#10;            android:focusable=&quot;false&quot;&#10;            android:clickable=&quot;false&quot;/&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tv_tag_label&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Tag&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;Spinner&#10;            android:id=&quot;@+id/spinner_tags&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot;/&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btn_add_tag&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Add New Tag&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot;/&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/btn_save&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Save&quot;&#10;            android:backgroundTint=&quot;#2196F3&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:layout_marginTop=&quot;24dp&quot;/&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/ScrollView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/res/layout/item_mom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/res/layout/item_mom.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;12dp&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:background=&quot;#FFFFFF&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_title&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Meeting Title&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_date&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;2025-08-10&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_summary&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Summary&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_tag&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Tag&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_read_status&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Read/Unread&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/mom_loader&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_pending_message&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Summary is being generated...&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_minutes&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Recognized Text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textColor=&quot;#000000&quot;&#10;        android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;12dp&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;120dp&quot;&#10;    android:background=&quot;#FFFFFF&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_title&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Meeting Title&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_date&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;2025-08-10&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_summary&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Summary&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_tag&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Tag&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_read_status&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Read/Unread&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/mom_loader&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_pending_message&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Summary is being generated...&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_minutes&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Recognized Text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textColor=&quot;#000000&quot;&#10;        android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>