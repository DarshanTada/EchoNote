<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/mobile/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    package=&quot;com.example.mobile&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADMIN&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_CONNECT&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot; /&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;com.google.android.wearable.permission.RECEIVE_COMPLICATION_DATA&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;com.google.android.wearable.permission.BIND_LISTENER&quot;/&gt;&#10;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.EchoNote&quot;&gt;&#10;&#10;        &lt;!-- Main launcher activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity_mobile&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- MOM list activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MOMListActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;MOM List&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- MOM detail activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MOMDetailActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;MOM Details&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Edit summary activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.EditSummaryActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;Edit Summary&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Service to receive text from watch --&gt;&#10;        &lt;service&#10;            android:name=&quot;.AudioReceiveService&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:enabled=&quot;true&quot; /&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    package=&quot;com.example.mobile&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADMIN&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_CONNECT&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot; /&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.WAKE_LOCK&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;com.google.android.wearable.permission.RECEIVE_COMPLICATION_DATA&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;&#10;    &lt;uses-permission android:name=&quot;com.google.android.wearable.permission.BIND_LISTENER&quot;/&gt;&#10;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.EchoNote&quot;&gt;&#10;&#10;        &lt;!-- Main launcher activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity_mobile&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- MOM list activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MOMListActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;MOM List&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- MOM detail activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MOMDetailActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;MOM Details&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Edit summary activity --&gt;&#10;        &lt;activity&#10;            android:name=&quot;.EditSummaryActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:label=&quot;Edit Summary&quot; &gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;!-- Service to receive text from watch --&gt;&#10;        &lt;!-- &lt;service&#10;            android:name=&quot;.AudioReceiveService&quot;&#10;            android:exported=&quot;true&quot;&#10;            android:enabled=&quot;true&quot; /&gt; --&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/AudioReceiveService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/AudioReceiveService.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.NotificationChannel;&#10;import android.app.NotificationManager;&#10;import android.app.PendingIntent;&#10;import android.content.Context;&#10;import android.content.Intent;&#10;import android.os.Build;&#10;import android.util.Log;&#10;&#10;import androidx.core.app.NotificationCompat;&#10;&#10;import com.google.android.gms.wearable.WearableListenerService;&#10;&#10;public class AudioReceiveService extends WearableListenerService {&#10;    @Override&#10;    public void onMessageReceived(com.google.android.gms.wearable.MessageEvent messageEvent) {&#10;        if (&quot;/recognized_text&quot;.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Received recognized text: &quot; + recognizedText);&#10;            // Show notification&#10;            showSummaryPendingNotification();&#10;            // Add note with pending summary&#10;            MOMListActivity.addNote(new MOMNote(&#10;                &quot;New Note&quot;, // title&#10;                &quot;&quot;, // summary (empty while pending)&#10;                &quot;&quot;, // actionPoints&#10;                recognizedText, // minutes (raw text)&#10;                System.currentTimeMillis(),&#10;                &quot;&quot;, // tag&#10;                false, // isRead&#10;                true // isSummaryPending&#10;            ));&#10;            GeminiTranscribeAndSummarize.start(AudioReceiveService.this, recognizedText);&#10;        }&#10;    }&#10;&#10;    private void showSummaryPendingNotification() {&#10;        String channelId = &quot;summary_pending_channel&quot;;&#10;        NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#10;        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {&#10;            NotificationChannel channel = new NotificationChannel(channelId, &quot;Summary Pending&quot;, NotificationManager.IMPORTANCE_DEFAULT);&#10;            notificationManager.createNotificationChannel(channel);&#10;        }&#10;        Intent intent = new Intent(this, MOMListActivity.class);&#10;        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);&#10;        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, channelId)&#10;            .setSmallIcon(android.R.drawable.ic_popup_sync)&#10;            .setContentTitle(&quot;EchoNote&quot;)&#10;            .setContentText(&quot;Summary is being generated for your new note.&quot;)&#10;            .setPriority(NotificationCompat.PRIORITY_DEFAULT)&#10;            .setContentIntent(pendingIntent)&#10;            .setAutoCancel(true);&#10;        notificationManager.notify(1001, builder.build());&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.NotificationChannel;&#10;import android.app.NotificationManager;&#10;import android.app.PendingIntent;&#10;import android.content.Context;&#10;import android.content.Intent;&#10;import android.os.Build;&#10;import android.util.Log;&#10;&#10;import androidx.core.app.NotificationCompat;&#10;&#10;import com.google.android.gms.wearable.WearableListenerService;&#10;&#10;public class AudioReceiveService extends WearableListenerService {&#10;    @Override&#10;    public void onMessageReceived(com.google.android.gms.wearable.MessageEvent messageEvent) {&#10;        Log.d(&quot;AudioReceiveService&quot;, &quot;onMessageReceived called&quot;);&#10;        if (&quot;/recognized_text&quot;.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Received recognized text: &quot; + recognizedText);&#10;            // Show notification&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Calling showSummaryPendingNotification&quot;);&#10;            showSummaryPendingNotification();&#10;            Log.d(&quot;AudioReceiveService&quot;, &quot;Notification should be shown&quot;);&#10;            // Add note with pending summary&#10;            MOMListActivity.addNote(new MOMNote(&#10;                &quot;New Note&quot;, // title&#10;                &quot;&quot;, // summary (empty while pending)&#10;                &quot;&quot;, // actionPoints&#10;                recognizedText, // minutes (raw text)&#10;                System.currentTimeMillis(),&#10;                &quot;&quot;, // tag&#10;                false, // isRead&#10;                true // isSummaryPending&#10;            ));&#10;            GeminiTranscribeAndSummarize.start(AudioReceiveService.this, recognizedText);&#10;        }&#10;    }&#10;&#10;    private void showSummaryPendingNotification() {&#10;        String channelId = &quot;summary_pending_channel&quot;;&#10;        NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);&#10;        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {&#10;            NotificationChannel channel = new NotificationChannel(channelId, &quot;Summary Pending&quot;, NotificationManager.IMPORTANCE_DEFAULT);&#10;            notificationManager.createNotificationChannel(channel);&#10;        }&#10;        Intent intent = new Intent(this, MOMListActivity.class);&#10;        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);&#10;        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, channelId)&#10;            .setSmallIcon(android.R.drawable.ic_popup_sync)&#10;            .setContentTitle(&quot;EchoNote&quot;)&#10;            .setContentText(&quot;Summary is being generated for your new note.&quot;)&#10;            .setPriority(NotificationCompat.PRIORITY_DEFAULT)&#10;            .setContentIntent(pendingIntent)&#10;            .setAutoCancel(true);&#10;        notificationManager.notify(1001, builder.build());&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/EditSummaryActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/EditSummaryActivity.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.TextView;&#10;&#10;public class EditSummaryActivity extends Activity {&#10;    private EditText etTitle, etSummary, etTag;&#10;    private String actionPoints, minutes;&#10;    private Button btnFilterTag, btnFilterRead, btnFilterUnread;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_summary);&#10;        etTitle = findViewById(R.id.et_title);&#10;        etSummary = findViewById(R.id.et_summary);&#10;        etTag = findViewById(R.id.et_tag);&#10;        TextView tvActionPoints = findViewById(R.id.tv_action_points);&#10;        TextView tvMinutes = findViewById(R.id.tv_minutes);&#10;        Button btnSave = findViewById(R.id.btn_save);&#10;        btnFilterTag = findViewById(R.id.btn_filter_tag);&#10;        btnFilterRead = findViewById(R.id.btn_filter_read);&#10;        btnFilterUnread = findViewById(R.id.btn_filter_unread);&#10;&#10;        Intent intent = getIntent();&#10;        String title = intent.getStringExtra(&quot;title&quot;);&#10;        String summary = intent.getStringExtra(&quot;summary&quot;);&#10;        actionPoints = intent.getStringExtra(&quot;action_points&quot;);&#10;        minutes = intent.getStringExtra(&quot;minutes&quot;);&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;&#10;        etTitle.setText(title);&#10;        etSummary.setText(summary);&#10;        etTag.setText(tag);&#10;        tvActionPoints.setText(actionPoints);&#10;        tvMinutes.setText(minutes);&#10;&#10;        btnSave.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                saveNote(etTitle.getText().toString(), etSummary.getText().toString(), actionPoints, minutes, etTag.getText().toString());&#10;                Intent listIntent = new Intent(EditSummaryActivity.this, MOMListActivity.class);&#10;                listIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);&#10;                startActivity(listIntent);&#10;                finish();&#10;            }&#10;        });&#10;&#10;        btnFilterTag.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                String tag = etTag.getText().toString();&#10;                ((MOMListActivity) EditSummaryActivity.this.getParent()).filterByTag(tag);&#10;            }&#10;        });&#10;        btnFilterRead.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                ((MOMListActivity) EditSummaryActivity.this.getParent()).filterByReadStatus(true);&#10;            }&#10;        });&#10;        btnFilterUnread.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                ((MOMListActivity) EditSummaryActivity.this.getParent()).filterByReadStatus(false);&#10;            }&#10;        });&#10;    }&#10;&#10;    private void saveNote(String title, String summary, String actionPoints, String minutes, String tag) {&#10;        MOMListActivity.addNote(new MOMNote(title, summary, actionPoints, minutes, System.currentTimeMillis(), tag, false));&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.TextView;&#10;&#10;public class EditSummaryActivity extends Activity {&#10;    private EditText etTitle, etSummary, etTag;&#10;    private String actionPoints, minutes;&#10;    private Button btnFilterTag, btnFilterRead, btnFilterUnread;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_summary);&#10;        etTitle = findViewById(R.id.et_title);&#10;        etSummary = findViewById(R.id.et_summary);&#10;        etTag = findViewById(R.id.et_tag);&#10;        TextView tvActionPoints = findViewById(R.id.tv_action_points);&#10;        TextView tvMinutes = findViewById(R.id.tv_minutes);&#10;        Button btnSave = findViewById(R.id.btn_save);&#10;        btnFilterTag = findViewById(R.id.btn_filter_tag);&#10;        btnFilterRead = findViewById(R.id.btn_filter_read);&#10;        btnFilterUnread = findViewById(R.id.btn_filter_unread);&#10;&#10;        Intent intent = getIntent();&#10;        String title = intent.getStringExtra(&quot;title&quot;);&#10;        String summary = intent.getStringExtra(&quot;summary&quot;);&#10;        actionPoints = intent.getStringExtra(&quot;action_points&quot;);&#10;        minutes = intent.getStringExtra(&quot;minutes&quot;);&#10;        String tag = intent.getStringExtra(&quot;tag&quot;);&#10;&#10;        etTitle.setText(title);&#10;        etSummary.setText(summary);&#10;        etTag.setText(tag);&#10;        tvActionPoints.setText(actionPoints);&#10;        tvMinutes.setText(minutes);&#10;&#10;        btnSave.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                saveNote(etTitle.getText().toString(), etSummary.getText().toString(), actionPoints, minutes, etTag.getText().toString());&#10;                Intent listIntent = new Intent(EditSummaryActivity.this, MOMListActivity.class);&#10;                listIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);&#10;                startActivity(listIntent);&#10;                finish();&#10;            }&#10;        });&#10;&#10;        btnFilterTag.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                String tag = etTag.getText().toString();&#10;                ((MOMListActivity) EditSummaryActivity.this.getParent()).filterByTag(tag);&#10;            }&#10;        });&#10;        btnFilterRead.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                ((MOMListActivity) EditSummaryActivity.this.getParent()).filterByReadStatus(true);&#10;            }&#10;        });&#10;        btnFilterUnread.setOnClickListener(new View.OnClickListener() {&#10;            @Override&#10;            public void onClick(View v) {&#10;                ((MOMListActivity) EditSummaryActivity.this.getParent()).filterByReadStatus(false);&#10;            }&#10;        });&#10;    }&#10;&#10;    private void saveNote(String title, String summary, String actionPoints, String minutes, String tag) {&#10;        MOMListActivity.addNote(new MOMNote(title, summary, actionPoints, minutes, System.currentTimeMillis(), tag, false, false));&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMAdapter.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.TextView;&#10;&#10;import com.example.mobile.MOMNote;&#10;&#10;import java.util.List;&#10;&#10;public class MOMAdapter extends ArrayAdapter&lt;MOMNote&gt; {&#10;    public MOMAdapter(Context context, List&lt;MOMNote&gt; notes) {&#10;        super(context, 0, notes);&#10;    }&#10;&#10;    @Override&#10;    public View getView(int position, View convertView, ViewGroup parent) {&#10;        MOMNote note = getItem(position);&#10;&#10;        if (convertView == null) {&#10;            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_mom, parent, false);&#10;        }&#10;&#10;        TextView titleView = (TextView) convertView.findViewById(R.id.mom_title);&#10;        TextView summaryView = (TextView) convertView.findViewById(R.id.mom_summary);&#10;        TextView dateView = (TextView) convertView.findViewById(R.id.mom_date);&#10;        TextView tagView = convertView.findViewById(R.id.mom_tag);&#10;        TextView readStatusView = convertView.findViewById(R.id.mom_read_status);&#10;&#10;        titleView.setText(note.getTitle());&#10;        summaryView.setText(note.getSummary());&#10;        dateView.setText(android.text.format.DateFormat.format(&quot;yyyy-MM-dd HH:mm&quot;, note.getTimestamp()));&#10;        tagView.setText(note.getTag());&#10;        readStatusView.setText(note.isRead() ? &quot;Read&quot; : &quot;Unread&quot;);&#10;&#10;        return convertView;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.content.Context;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.ProgressBar;&#10;import android.widget.TextView;&#10;&#10;import com.example.mobile.MOMNote;&#10;&#10;import java.util.List;&#10;&#10;public class MOMAdapter extends ArrayAdapter&lt;MOMNote&gt; {&#10;    public MOMAdapter(Context context, List&lt;MOMNote&gt; notes) {&#10;        super(context, 0, notes);&#10;    }&#10;&#10;    @Override&#10;    public View getView(int position, View convertView, ViewGroup parent) {&#10;        MOMNote note = getItem(position);&#10;&#10;        if (convertView == null) {&#10;            convertView = LayoutInflater.from(getContext()).inflate(R.layout.item_mom, parent, false);&#10;        }&#10;&#10;        TextView minutesView = (TextView) convertView.findViewById(R.id.mom_minutes);&#10;        // Only display the minutes (recognized text)&#10;        minutesView.setText(note.getMinutes());&#10;        // Hide other views if present&#10;        TextView titleView = convertView.findViewById(R.id.mom_title);&#10;        TextView summaryView = convertView.findViewById(R.id.mom_summary);&#10;        TextView dateView = convertView.findViewById(R.id.mom_date);&#10;        TextView tagView = convertView.findViewById(R.id.mom_tag);&#10;        TextView readStatusView = convertView.findViewById(R.id.mom_read_status);&#10;        ProgressBar loader = convertView.findViewById(R.id.mom_loader);&#10;        TextView pendingMessage = convertView.findViewById(R.id.mom_pending_message);&#10;        if (titleView != null) titleView.setVisibility(View.GONE);&#10;        if (summaryView != null) summaryView.setVisibility(View.GONE);&#10;        if (dateView != null) dateView.setVisibility(View.GONE);&#10;        if (tagView != null) tagView.setVisibility(View.GONE);&#10;        if (readStatusView != null) readStatusView.setVisibility(View.GONE);&#10;        if (loader != null) loader.setVisibility(View.GONE);&#10;        if (pendingMessage != null) pendingMessage.setVisibility(View.GONE);&#10;        return convertView;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMListActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MOMListActivity.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;import com.example.shared.MOM;  // If in shared module&#10;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.AdapterView;&#10;import android.widget.ListView;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class MOMListActivity extends Activity {&#10;&#10;    private ListView listView;&#10;    private MOMAdapter adapter;&#10;    private static ArrayList&lt;MOMNote&gt; momNotes = new ArrayList&lt;&gt;();&#10;    private static ArrayList&lt;MOMNote&gt; filteredNotes = new ArrayList&lt;&gt;();&#10;&#10;    public static void addNote(MOMNote note) {&#10;        momNotes.add(note);&#10;        Collections.sort(momNotes, (a, b) -&gt; Long.compare(b.getTimestamp(), a.getTimestamp()));&#10;        // Also add to filteredNotes if no filter is applied&#10;        // If filteredNotes contains all notes, update it&#10;        if (filteredNotes.size() == momNotes.size() - 1 || filteredNotes.isEmpty()) {&#10;            filteredNotes.add(note);&#10;            Collections.sort(filteredNotes, (a, b) -&gt; Long.compare(b.getTimestamp(), a.getTimestamp()));&#10;        }&#10;    }&#10;&#10;    private void updateAdapter() {&#10;        if (adapter != null) {&#10;            adapter.notifyDataSetChanged();&#10;        }&#10;    }&#10;&#10;    public void filterByTag(String tag) {&#10;        filteredNotes.clear();&#10;        for (MOMNote note : momNotes) {&#10;            if (note.getTag() != null &amp;&amp; note.getTag().equalsIgnoreCase(tag)) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        updateAdapter();&#10;    }&#10;    public void filterByReadStatus(boolean isRead) {&#10;        filteredNotes.clear();&#10;        for (MOMNote note : momNotes) {&#10;            if (note.isRead() == isRead) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        updateAdapter();&#10;    }&#10;    public void clearFilter() {&#10;        filteredNotes.clear();&#10;        filteredNotes.addAll(momNotes);&#10;        updateAdapter();&#10;    }&#10;    public static void deleteNoteByTimestamp(long timestamp) {&#10;        for (int i = 0; i &lt; momNotes.size(); i++) {&#10;            if (momNotes.get(i).getTimestamp() == timestamp) {&#10;                momNotes.remove(i);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_mom_list);&#10;&#10;        listView = (ListView) findViewById(R.id.mom_list_view);&#10;&#10;        filteredNotes.addAll(momNotes);&#10;        adapter = new MOMAdapter(this, filteredNotes);&#10;        listView.setAdapter(adapter);&#10;&#10;        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {&#10;            @Override&#10;            public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {&#10;                MOMNote note = momNotes.get(position);&#10;                note.setRead(true);&#10;                Intent intent = new Intent(MOMListActivity.this, MOMDetailActivity.class);&#10;                intent.putExtra(&quot;title&quot;, note.getTitle());&#10;                intent.putExtra(&quot;summary&quot;, note.getSummary());&#10;                intent.putExtra(&quot;action_points&quot;, note.getActionPoints());&#10;                intent.putExtra(&quot;minutes&quot;, note.getMinutes());&#10;                intent.putExtra(&quot;timestamp&quot;, note.getTimestamp());&#10;                intent.putExtra(&quot;tag&quot;, note.getTag());&#10;                intent.putExtra(&quot;isRead&quot;, note.isRead());&#10;                startActivity(intent);&#10;            }&#10;        });&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;import com.example.shared.MOM;  // If in shared module&#10;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.View;&#10;import android.widget.AdapterView;&#10;import android.widget.ListView;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class MOMListActivity extends Activity {&#10;&#10;    private ListView listView;&#10;    private MOMAdapter adapter;&#10;    private static ArrayList&lt;MOMNote&gt; momNotes = new ArrayList&lt;&gt;();&#10;    private static ArrayList&lt;MOMNote&gt; filteredNotes = new ArrayList&lt;&gt;();&#10;&#10;    public static void addNote(MOMNote note) {&#10;        momNotes.add(note);&#10;        Collections.sort(momNotes, (a, b) -&gt; Long.compare(b.getTimestamp(), a.getTimestamp()));&#10;        // Also add to filteredNotes if no filter is applied&#10;        // If filteredNotes contains all notes, update it&#10;        if (filteredNotes.size() == momNotes.size() - 1 || filteredNotes.isEmpty()) {&#10;            filteredNotes.add(note);&#10;            Collections.sort(filteredNotes, (a, b) -&gt; Long.compare(b.getTimestamp(), a.getTimestamp()));&#10;        }&#10;    }&#10;&#10;    private void updateAdapter() {&#10;        if (adapter != null) {&#10;            adapter.notifyDataSetChanged();&#10;        }&#10;    }&#10;&#10;    public void filterByTag(String tag) {&#10;        filteredNotes.clear();&#10;        for (MOMNote note : momNotes) {&#10;            if (note.getTag() != null &amp;&amp; note.getTag().equalsIgnoreCase(tag)) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        updateAdapter();&#10;    }&#10;    public void filterByReadStatus(boolean isRead) {&#10;        filteredNotes.clear();&#10;        for (MOMNote note : momNotes) {&#10;            if (note.isRead() == isRead) {&#10;                filteredNotes.add(note);&#10;            }&#10;        }&#10;        updateAdapter();&#10;    }&#10;    public void clearFilter() {&#10;        filteredNotes.clear();&#10;        filteredNotes.addAll(momNotes);&#10;        updateAdapter();&#10;    }&#10;    public static void deleteNoteByTimestamp(long timestamp) {&#10;        for (int i = 0; i &lt; momNotes.size(); i++) {&#10;            if (momNotes.get(i).getTimestamp() == timestamp) {&#10;                momNotes.remove(i);&#10;                break;&#10;            }&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_mom_list);&#10;&#10;        listView = (ListView) findViewById(R.id.mom_list_view);&#10;&#10;        filteredNotes.addAll(momNotes);&#10;        adapter = new MOMAdapter(this, filteredNotes);&#10;        listView.setAdapter(adapter);&#10;&#10;        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {&#10;            @Override&#10;            public void onItemClick(AdapterView&lt;?&gt; parent, View view, int position, long id) {&#10;                MOMNote note = momNotes.get(position);&#10;                note.setRead(true);&#10;                Intent intent = new Intent(MOMListActivity.this, MOMDetailActivity.class);&#10;                intent.putExtra(&quot;title&quot;, note.getTitle());&#10;                intent.putExtra(&quot;summary&quot;, note.getSummary());&#10;                intent.putExtra(&quot;action_points&quot;, note.getActionPoints());&#10;                intent.putExtra(&quot;minutes&quot;, note.getMinutes());&#10;                intent.putExtra(&quot;timestamp&quot;, note.getTimestamp());&#10;                intent.putExtra(&quot;tag&quot;, note.getTag());&#10;                intent.putExtra(&quot;isRead&quot;, note.isRead());&#10;                startActivity(intent);&#10;            }&#10;        });&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        // Refresh filteredNotes and notify adapter&#10;        filteredNotes.clear();&#10;        filteredNotes.addAll(momNotes);&#10;        if (adapter != null) {&#10;            adapter.notifyDataSetChanged();&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MainActivity_mobile.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/MainActivity_mobile.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.widget.Button;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;&#10;import com.google.android.gms.wearable.MessageClient;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.Wearable;&#10;&#10;public class MainActivity_mobile extends Activity implements MessageClient.OnMessageReceivedListener {&#10;&#10;    private static final String TAG = &quot;MainActivity_mobile&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    private Button btnMOMList;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main_mobile);&#10;&#10;        btnMOMList = findViewById(R.id.btn_mom_list);&#10;&#10;        btnMOMList.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(MainActivity_mobile.this, MOMListActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        // Add Wear listener&#10;        Wearable.getMessageClient(this).addListener(this);&#10;    }&#10;&#10;    @Override&#10;    public void onMessageReceived(@NonNull MessageEvent messageEvent) {&#10;        if (MESSAGE_PATH.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(TAG, &quot;Received from watch: &quot; + recognizedText);&#10;&#10;            // Create a MOMNote and add to list&#10;            MOMNote note = new MOMNote(&#10;                    recognizedText,                  // title&#10;                    &quot;Speech from watch&quot;,             // summary&#10;                    &quot;&quot;,                               // action points&#10;                    &quot;&quot;,                               // minutes&#10;                    System.currentTimeMillis(),       // timestamp&#10;                    &quot;Voice&quot;,                          // tag&#10;                    false                             // isRead&#10;            );&#10;            MOMListActivity.addNote(note);&#10;&#10;            runOnUiThread(() -&gt;&#10;                    Toast.makeText(this, &quot;Note added from watch!&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        Wearable.getMessageClient(this).removeListener(this);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.app.Activity;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.widget.Button;&#10;import android.widget.Toast;&#10;&#10;import androidx.annotation.NonNull;&#10;&#10;import com.google.android.gms.wearable.MessageClient;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.Wearable;&#10;&#10;public class MainActivity_mobile extends Activity implements MessageClient.OnMessageReceivedListener {&#10;&#10;    private static final String TAG = &quot;MainActivity_mobile&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    private Button btnMOMList;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main_mobile);&#10;&#10;        btnMOMList = findViewById(R.id.btn_mom_list);&#10;&#10;        btnMOMList.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(MainActivity_mobile.this, MOMListActivity.class);&#10;            startActivity(intent);&#10;        });&#10;&#10;        // Add Wear listener&#10;        Wearable.getMessageClient(this).addListener(this);&#10;    }&#10;&#10;    @Override&#10;    public void onMessageReceived(@NonNull MessageEvent messageEvent) {&#10;        if (MESSAGE_PATH.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(TAG, &quot;Received from watch: &quot; + recognizedText);&#10;&#10;            // Create a MOMNote and add to list&#10;            MOMNote note = new MOMNote(&#10;                    recognizedText,                  // title&#10;                    &quot;Speech from watch&quot;,             // summary&#10;                    &quot;&quot;,                               // action points&#10;                    &quot;&quot;,                               // minutes&#10;                    System.currentTimeMillis(),       // timestamp&#10;                    &quot;Voice&quot;,                          // tag&#10;                    false,                            // isRead&#10;                    false                             // isSummaryPending&#10;            );&#10;            MOMListActivity.addNote(note);&#10;&#10;            runOnUiThread(() -&gt;&#10;                    Toast.makeText(this, &quot;Note added from watch!&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onDestroy() {&#10;        super.onDestroy();&#10;        Wearable.getMessageClient(this).removeListener(this);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/WearMessageListenerService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/java/com/example/mobile/WearMessageListenerService.java" />
              <option name="originalContent" value="package com.example.mobile;&#10;&#10;import android.util.Log;&#10;import android.widget.Toast;&#10;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.WearableListenerService;&#10;&#10;public class WearMessageListenerService extends WearableListenerService {&#10;&#10;    private static final String TAG = &quot;WearMsgListenerService&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    @Override&#10;    public void onMessageReceived(MessageEvent messageEvent) {&#10;        if (MESSAGE_PATH.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(TAG, &quot;Received from watch: &quot; + recognizedText);&#10;&#10;            // Add note to MOM list&#10;            MOMNote note = new MOMNote(&#10;                    recognizedText,&#10;                    &quot;Speech from watch&quot;,&#10;                    &quot;&quot;,&#10;                    &quot;&quot;,&#10;                    System.currentTimeMillis(),&#10;                    &quot;Voice&quot;,&#10;                    false&#10;            );&#10;            MOMListActivity.addNote(note);&#10;&#10;            // Optional toast (runs in background thread so use handler)&#10;            new android.os.Handler(getMainLooper()).post(() -&gt;&#10;                    Toast.makeText(getApplicationContext(), &quot;Note received from watch!&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        } else {&#10;            super.onMessageReceived(messageEvent);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.mobile;&#10;&#10;import android.util.Log;&#10;import android.widget.Toast;&#10;&#10;import com.google.android.gms.wearable.MessageEvent;&#10;import com.google.android.gms.wearable.WearableListenerService;&#10;&#10;public class WearMessageListenerService extends WearableListenerService {&#10;&#10;    private static final String TAG = &quot;WearMsgListenerService&quot;;&#10;    private static final String MESSAGE_PATH = &quot;/recognized_text&quot;;&#10;&#10;    @Override&#10;    public void onMessageReceived(MessageEvent messageEvent) {&#10;        if (MESSAGE_PATH.equals(messageEvent.getPath())) {&#10;            String recognizedText = new String(messageEvent.getData());&#10;            Log.d(TAG, &quot;Received from watch: &quot; + recognizedText);&#10;&#10;            // Add note to MOM list&#10;            MOMNote note = new MOMNote(&#10;                    recognizedText,&#10;                    &quot;Speech from watch&quot;,&#10;                    &quot;&quot;,&#10;                    &quot;&quot;,&#10;                    System.currentTimeMillis(),&#10;                    &quot;Voice&quot;,&#10;                    false,&#10;                    false // isSummaryPending&#10;            );&#10;            MOMListActivity.addNote(note);&#10;&#10;            // Optional toast (runs in background thread so use handler)&#10;            new android.os.Handler(getMainLooper()).post(() -&gt;&#10;                    Toast.makeText(getApplicationContext(), &quot;Note received from watch!&quot;, Toast.LENGTH_SHORT).show()&#10;            );&#10;        } else {&#10;            super.onMessageReceived(messageEvent);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/mobile/src/main/res/layout/item_mom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/mobile/src/main/res/layout/item_mom.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;12dp&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:background=&quot;#FFFFFF&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_title&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Meeting Title&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_date&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;2025-08-10&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_summary&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Summary&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_tag&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Tag&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_read_status&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Read/Unread&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/mom_loader&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_pending_message&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Summary is being generated...&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_minutes&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Recognized Text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textColor=&quot;#000000&quot;&#10;        android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout&#10;    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:padding=&quot;12dp&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;120dp&quot;&#10;    android:background=&quot;#FFFFFF&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_title&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Meeting Title&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_date&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;2025-08-10&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_summary&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Summary&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_tag&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Tag&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_read_status&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Read/Unread&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;ProgressBar&#10;        android:id=&quot;@+id/mom_loader&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:layout_marginTop=&quot;4dp&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_pending_message&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Summary is being generated...&quot;&#10;        android:textSize=&quot;14sp&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        android:layout_marginBottom=&quot;4dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/mom_minutes&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Recognized Text&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textColor=&quot;#000000&quot;&#10;        android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>